Ridge_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.08008113863658377
test-score:
0.114859696383395
runtime:
0:00:00.399229
best parameters:
{'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00313683, 0.00712881, 0.00184598, 0.00193667, 0.00125117,
       0.00125237, 0.00130115, 0.00303211, 0.00472045, 0.00217781,
       0.00192037, 0.00143313, 0.00151234, 0.00156236, 0.00260634,
       0.00333314, 0.00167255, 0.00291214, 0.0028563 , 0.00732288]), 'std_fit_time': array([1.64516380e-04, 9.33763146e-03, 2.37362267e-04, 1.72357344e-03,
       3.70700334e-05, 1.10080210e-05, 5.86645374e-06, 4.91101939e-04,
       2.35021806e-03, 9.43385412e-05, 3.00049948e-05, 7.97164205e-05,
       7.70913710e-05, 1.11229563e-04, 2.11811259e-05, 1.07533429e-04,
       1.36334356e-04, 6.96433035e-05, 6.74953523e-05, 3.24792825e-03]), 'mean_score_time': array([0.00046916, 0.00081105, 0.00044107, 0.00043902, 0.00062895,
       0.00062318, 0.00062876, 0.00063615, 0.00063167, 0.00065684,
       0.0006978 , 0.00068398, 0.00069876, 0.00068641, 0.00066915,
       0.00081778, 0.00065832, 0.00066662, 0.00063152, 0.0007134 ]), 'std_score_time': array([4.30347583e-05, 2.85001760e-04, 6.10649513e-06, 4.17770312e-06,
       6.23363146e-06, 3.19658771e-06, 2.03090090e-06, 7.08933546e-06,
       5.04997341e-06, 2.85760357e-05, 3.44041892e-05, 1.88994815e-05,
       1.06478923e-05, 4.46895896e-05, 2.72443071e-05, 1.81850714e-04,
       2.32633011e-05, 1.89730863e-05, 2.90987898e-06, 1.02183255e-04]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.07963996,  0.0779958 ,  0.07833811,  0.08309096, -0.57885984,
       -0.59786176, -0.56200768, -0.56981534,  0.07600144, -0.56524884,
        0.06696062, -0.99442056, -0.56200768, -0.57885984,  0.07772467,
        0.06675456,  0.08089106,  0.01597439, -0.59786132, -0.56562314]), 'split1_test_score': array([ 0.08143549,  0.0807948 ,  0.08068956,  0.08193054, -0.24229227,
       -0.26234461, -0.22508238, -0.23125659,  0.0806932 , -0.22851065,
        0.0672371 , -0.66007635, -0.22508238, -0.24229227,  0.08107944,
        0.06728282,  0.07521199,  0.01871853, -0.2623448 , -0.22854283]), 'split2_test_score': array([ 0.10224838,  0.10162623,  0.10099116,  0.10323932, -0.11633487,
       -0.15957604, -0.17529238, -0.14724107,  0.0982595 , -0.15658373,
        0.06690751, -0.76611475, -0.17529238, -0.11633487,  0.10086795,
        0.06679449,  0.0836379 , -0.00107531, -0.1595681 , -0.15662271]), 'split3_test_score': array([ 0.02292363,  0.02484593,  0.02411553,  0.02897892, -0.22114834,
       -0.2092962 , -0.27018382, -0.24948225,  0.02071932, -0.25517714,
        0.03181307, -0.6165867 , -0.27018382, -0.22114834,  0.02289961,
        0.03219681,  0.04240464,  0.01060198, -0.20929364, -0.25531939]), 'split4_test_score': array([ 0.09564379,  0.10779992,  0.10952076,  0.10316594, -0.33111194,
       -0.32520777, -0.61277349, -0.3462948 ,  0.01779225, -0.368646  ,
        0.10877529, -0.64799815, -0.61277349, -0.33111194,  0.07039122,
        0.10872422,  0.10356705,  0.02800661, -0.3252107 , -0.3683992 ]), 'mean_test_score': array([ 0.07637825,  0.07861254,  0.07873102,  0.08008114, -0.29794945,
       -0.31085728, -0.36906795, -0.30881801,  0.05869314, -0.31483327,
        0.06833872, -0.7370393 , -0.36906795, -0.29794945,  0.07059258,
        0.06835058,  0.07714253,  0.01444524, -0.31085571, -0.31490145]), 'std_test_score': array([0.02805008, 0.02924901, 0.02976698, 0.02717766, 0.15619884,
       0.15370859, 0.18148114, 0.14502947, 0.03305744, 0.14258831,
       0.02439017, 0.13816725, 0.18148114, 0.15619884, 0.02589247,
       0.02426205, 0.01982395, 0.00959342, 0.15371037, 0.14267681]), 'rank_test_score': array([ 5,  3,  2,  1, 11, 15, 18, 13,  9, 16,  8, 20, 18, 12,  6,  7,  4,
       10, 14, 17], dtype=int32)}