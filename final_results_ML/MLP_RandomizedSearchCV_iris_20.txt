MLP_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.975
test-score:
1.0
runtime:
0:00:16.876288
best parameters:
{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.11085901, 0.09304786, 0.21035929, 0.12666001, 0.15722537,
       0.1043622 , 0.14259996, 0.26985478, 0.25806961, 0.15258107,
       0.19158878, 0.15477481, 0.20129752, 0.17707133, 0.14441638,
       0.20906134, 0.22066855, 0.14322271, 0.09811096, 0.16231847]), 'std_fit_time': array([0.01440688, 0.00470455, 0.03128243, 0.00290043, 0.02453414,
       0.00248046, 0.00303588, 0.00741249, 0.03538146, 0.01045917,
       0.00329855, 0.00656968, 0.00345304, 0.00408655, 0.01536066,
       0.0152239 , 0.03706064, 0.02434547, 0.00690767, 0.00460193]), 'mean_score_time': array([0.00043468, 0.00046763, 0.00043931, 0.00041552, 0.00055351,
       0.00048213, 0.00040607, 0.00042529, 0.00050821, 0.00056152,
       0.00038834, 0.00038767, 0.00039239, 0.00039744, 0.00044484,
       0.00048141, 0.00051541, 0.00042844, 0.00043507, 0.00039568]), 'std_score_time': array([4.17327598e-05, 5.60896315e-05, 6.29845031e-05, 3.14663392e-05,
       1.01119455e-04, 1.16511762e-04, 1.40641905e-05, 2.44259805e-06,
       7.06244930e-05, 2.79694159e-05, 5.08094549e-06, 2.62390451e-05,
       1.07049677e-06, 3.66575834e-06, 3.36497736e-05, 9.33507114e-05,
       1.08569800e-04, 4.76913446e-05, 5.43639114e-05, 3.88731970e-06]), 'param_solver': masked_array(data=['adam', 'adam', 'sgd', 'sgd', 'adam', 'adam', 'sgd',
                   'adam', 'adam', 'adam', 'sgd', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'sgd', 'sgd'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[200, 200, 400, 300, 200, 200, 300, 400, 300, 200, 400,
                   300, 400, 400, 200, 300, 300, 300, 200, 400],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['invscaling', 'constant', 'invscaling', 'invscaling',
                   'constant', 'constant', 'constant', 'adaptive',
                   'adaptive', 'constant', 'adaptive', 'constant',
                   'invscaling', 'adaptive', 'invscaling', 'adaptive',
                   'invscaling', 'invscaling', 'invscaling', 'constant'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100,), (50,), (100,), (50,), (100,), (100,), (50,),
                   (100,), (150,), (150,), (50,), (50,), (50,), (50,),
                   (100,), (100,), (100,), (50,), (100,), (50,)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001,
                   0.001, 0.01, 0.0001, 0.0001, 0.001, 0.01, 0.0001, 0.01,
                   0.01, 0.01, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'tanh', 'relu', 'tanh',
                   'tanh', 'tanh', 'relu', 'tanh', 'tanh', 'tanh', 'relu',
                   'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (150,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (150,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}], 'split0_test_score': array([1.        , 0.95833333, 0.29166667, 0.04166667, 0.95833333,
       1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ,
       0.95833333, 0.95833333, 1.        , 1.        , 1.        ,
       0.95833333, 0.95833333, 1.        , 0.70833333, 0.95833333]), 'split1_test_score': array([1.        , 0.95833333, 0.04166667, 0.125     , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       0.95833333, 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.41666667, 0.95833333]), 'split2_test_score': array([0.875     , 0.91666667, 0.66666667, 0.29166667, 0.875     ,
       0.875     , 0.875     , 0.875     , 0.875     , 0.875     ,
       0.875     , 0.875     , 0.875     , 0.875     , 0.875     ,
       0.875     , 0.875     , 0.875     , 0.33333333, 0.875     ]), 'split3_test_score': array([1.        , 1.        , 0.16666667, 0.29166667, 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.33333333, 1.        ]), 'split4_test_score': array([1.        , 1.        , 0.33333333, 0.33333333, 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.41666667, 1.        ]), 'mean_test_score': array([0.975     , 0.96666667, 0.3       , 0.21666667, 0.96666667,
       0.975     , 0.96666667, 0.96666667, 0.96666667, 0.975     ,
       0.95833333, 0.96666667, 0.975     , 0.975     , 0.975     ,
       0.96666667, 0.96666667, 0.975     , 0.44166667, 0.95833333]), 'std_test_score': array([0.05      , 0.03118048, 0.20982797, 0.11303883, 0.04859127,
       0.05      , 0.04859127, 0.04859127, 0.04859127, 0.05      ,
       0.04564355, 0.04859127, 0.05      , 0.05      , 0.05      ,
       0.04859127, 0.04859127, 0.05      , 0.13844373, 0.04564355]), 'rank_test_score': array([ 1,  8, 19, 20,  8,  1,  8,  8,  8,  1, 16,  8,  1,  1,  1,  8,  8,
        1, 18, 16], dtype=int32)}