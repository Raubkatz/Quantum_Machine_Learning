XGBoost_RandomizedSearchCV for the wine dataset with n_iter=20
CV-score:
0.9857142857142858
test-score:
1.0
runtime:
0:00:04.030425
best parameters:
{'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.03557739, 0.04074779, 0.04470868, 0.03654637, 0.04804354,
       0.0356894 , 0.04261575, 0.0333323 , 0.06613221, 0.02928481,
       0.01860571, 0.03177943, 0.02935872, 0.03257132, 0.03981571,
       0.03964267, 0.01525111, 0.03984642, 0.03813047, 0.04702344]), 'std_fit_time': array([0.00111634, 0.01483057, 0.02426827, 0.01256438, 0.01433322,
       0.01139413, 0.00954193, 0.0063605 , 0.03026039, 0.00723918,
       0.00595762, 0.00789245, 0.00628117, 0.00910715, 0.01404061,
       0.00964993, 0.00029359, 0.00834054, 0.00695672, 0.0166779 ]), 'mean_score_time': array([0.00129428, 0.00130215, 0.00177031, 0.00180435, 0.00148368,
       0.00243697, 0.00158486, 0.00142117, 0.00191851, 0.00133433,
       0.00165248, 0.00218477, 0.00133605, 0.00132666, 0.00256243,
       0.00142741, 0.00115013, 0.00139918, 0.00145931, 0.0016633 ]), 'std_score_time': array([7.49108899e-05, 8.08906982e-05, 9.93560065e-04, 9.63486040e-04,
       1.60790098e-04, 1.91263414e-03, 3.25735543e-04, 1.84677585e-04,
       9.51528393e-04, 1.49421593e-04, 8.55646447e-04, 1.27229681e-03,
       1.36435386e-04, 1.31002156e-04, 1.98094522e-03, 1.64890400e-04,
       2.08955897e-05, 1.37451204e-04, 1.93956432e-04, 6.54884577e-04]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       0.96551724, 1.        , 1.        , 1.        , 1.        ,
       0.96551724, 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ]), 'split1_test_score': array([0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       0.93103448, 0.96551724, 1.        , 0.96551724, 0.96551724,
       0.93103448, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       1.        , 0.96551724, 0.96551724, 0.93103448, 0.96551724]), 'split2_test_score': array([0.92857143, 0.96428571, 0.92857143, 0.92857143, 0.92857143,
       0.92857143, 0.92857143, 0.92857143, 0.92857143, 0.92857143,
       0.89285714, 0.92857143, 0.92857143, 0.92857143, 0.92857143,
       0.96428571, 0.92857143, 0.92857143, 0.92857143, 0.96428571]), 'split3_test_score': array([0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.92857143, 0.96428571, 0.96428571,
       0.92857143, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571]), 'split4_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       0.96428571, 1.        , 1.        , 1.        , 1.        ,
       0.92857143, 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.92857143, 1.        ]), 'mean_test_score': array([0.97167488, 0.97881773, 0.97167488, 0.97167488, 0.97167488,
       0.95073892, 0.97167488, 0.97142857, 0.97167488, 0.97167488,
       0.92931034, 0.97167488, 0.97167488, 0.97167488, 0.97167488,
       0.98571429, 0.97167488, 0.97167488, 0.95049261, 0.97881773]), 'std_test_score': array([0.02666477, 0.01730109, 0.02666477, 0.02666477, 0.02666477,
       0.01711778, 0.02666477, 0.03499271, 0.02666477, 0.02666477,
       0.02299496, 0.02666477, 0.02666477, 0.02666477, 0.02666477,
       0.01749636, 0.02666477, 0.02666477, 0.02821676, 0.01730109]), 'rank_test_score': array([ 4,  2,  4,  4,  4, 18,  4, 17,  4,  4, 20,  4,  4,  4,  4,  1,  4,
        4, 19,  2], dtype=int32)}