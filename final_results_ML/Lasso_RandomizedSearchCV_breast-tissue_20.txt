Lasso_RandomizedSearchCV for the breast-tissue dataset with n_iter=20
CV-score:
-0.052319398695337374
test-score:
-0.00026500253554462283
runtime:
0:00:00.225531
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.001122  , 0.001121  , 0.00110874, 0.00614967, 0.00104723,
       0.0010921 , 0.00111127, 0.00127401, 0.00109138, 0.0010922 ,
       0.00104122, 0.00103312, 0.00101061, 0.001018  , 0.00104141,
       0.00108957, 0.00113029, 0.00103431, 0.00121408, 0.00113373]), 'std_fit_time': array([1.01627971e-04, 2.87989117e-05, 1.48468745e-05, 8.35698599e-03,
       5.66132434e-06, 1.00674768e-05, 1.27729892e-04, 1.19442768e-04,
       2.19343020e-05, 1.35416716e-05, 1.23806983e-05, 6.41412448e-06,
       2.36313106e-05, 2.61563328e-05, 1.60716052e-05, 2.37544364e-05,
       9.32993772e-06, 7.02004063e-06, 3.49705363e-05, 4.37863753e-05]), 'mean_score_time': array([0.00045228, 0.00042734, 0.00042443, 0.0008728 , 0.00042634,
       0.00043015, 0.00048094, 0.00047379, 0.00043712, 0.00042801,
       0.00042791, 0.00042491, 0.00043502, 0.000422  , 0.0004282 ,
       0.00042782, 0.00042381, 0.00042305, 0.00044327, 0.00044527]), 'std_score_time': array([5.19089319e-05, 3.04056140e-06, 1.09153015e-06, 4.42606543e-04,
       1.40969710e-06, 9.38582212e-06, 6.34102707e-05, 3.61392237e-05,
       8.69309581e-06, 3.16800790e-06, 6.28882955e-06, 9.34406182e-07,
       7.84625365e-06, 7.23159356e-07, 8.13283482e-06, 8.22402417e-06,
       1.07261866e-06, 9.60800251e-07, 1.11771281e-05, 1.17166177e-05]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.18716077, -0.0167121 , -0.0167121 , -0.0167121 , -1.49088907,
       -0.0167121 , -3.90455531, -3.90455531,  0.16101101, -0.0167121 ,
       -1.48055595, -3.90455531, -3.90455531,  0.06675326,  0.06650339,
       -0.0167121 ,  0.18200855,  0.12420257,  0.12598604, -0.01552171]), 'split1_test_score': array([-1.32475179, -0.07633503, -0.07633503, -0.07633503, -2.38087299,
       -0.07633503, -5.12790698, -5.12790698, -1.12016717, -0.07633503,
       -2.37858546, -5.12790698, -5.12790698, -0.8170678 , -0.81522575,
       -0.07633503, -1.28829368, -0.72725626, -0.5915793 , -0.16938712]), 'split2_test_score': array([ 0.02784912, -0.01258611, -0.01258611, -0.01258611, -1.0459547 ,
       -0.01258611, -2.83657588, -2.83657588, -0.01045828, -0.01258611,
       -1.027162  , -2.83657588, -2.83657588, -0.00891632, -0.0074588 ,
       -0.01258611,  0.02892828, -0.01920081,  0.01980627, -0.01881465]), 'split3_test_score': array([ 1.06730065e-01, -6.74637983e-03, -6.74637983e-03, -6.74637983e-03,
       -1.20168412e+00, -6.74637983e-03, -3.29017013e+00, -3.29017013e+00,
       -2.50382774e-03, -6.74637983e-03, -1.22477579e+00, -3.29017013e+00,
       -3.29017013e+00, -5.23541416e-03, -6.00570589e-03, -6.74637983e-03,
        1.02697502e-01, -1.35959918e-02,  3.32129097e-02, -6.74637983e-03]), 'split4_test_score': array([-0.18575624, -0.14921738, -0.14921738, -0.14921738, -0.78955715,
       -0.14921738, -2.72543742, -2.72543742, -0.23626952, -0.14921738,
       -0.78689302, -2.72543742, -2.72543742, -0.11190091, -0.11439683,
       -0.14921738, -0.17574967, -0.15230553, -0.09184267, -0.14497606]), 'mean_test_score': array([-0.23775361, -0.0523194 , -0.0523194 , -0.0523194 , -1.38179161,
       -0.0523194 , -3.57692914, -3.57692914, -0.24167756, -0.0523194 ,
       -1.37959444, -3.57692914, -3.57692914, -0.17527344, -0.17531674,
       -0.0523194 , -0.2300818 , -0.1576312 , -0.10088335, -0.07108918]), 'std_test_score': array([0.55750064, 0.05457011, 0.05457011, 0.05457011, 0.54882286,
       0.05457011, 0.87957524, 0.87957524, 0.45707718, 0.05457011,
       0.54911724, 0.87957524, 0.87957524, 0.32590815, 0.32511975,
       0.05457011, 0.54229348, 0.29793975, 0.25490459, 0.07082672]), 'rank_test_score': array([13,  1,  1,  1, 16,  1, 17, 17, 14,  1, 15, 17, 17, 10, 11,  1, 12,
        9,  8,  7], dtype=int32)}