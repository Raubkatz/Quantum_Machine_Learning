MLP_RandomizedSearchCV for the breast-cancer-coimbra dataset with n_iter=20
CV-score:
0.6865497076023392
test-score:
0.875
runtime:
0:00:10.951229
best parameters:
{'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.10713663, 0.08847947, 0.00810585, 0.00954542, 0.11128531,
       0.10186887, 0.02058039, 0.21978993, 0.19196796, 0.11443396,
       0.04603353, 0.1362195 , 0.1812233 , 0.17471972, 0.11165094,
       0.16470795, 0.16620622, 0.13326268, 0.00639691, 0.03412724]), 'std_fit_time': array([0.01376835, 0.00321463, 0.00097585, 0.00263212, 0.00376812,
       0.00500093, 0.01426416, 0.00531472, 0.00329569, 0.00324117,
       0.01289684, 0.00308331, 0.00387852, 0.0045778 , 0.00364278,
       0.00554065, 0.00520773, 0.00498803, 0.00025276, 0.02665234]), 'mean_score_time': array([0.00055265, 0.00051723, 0.00058632, 0.00053034, 0.00053768,
       0.00053015, 0.00040112, 0.0005445 , 0.00053868, 0.00053921,
       0.00055842, 0.00055056, 0.00050859, 0.00049148, 0.00053663,
       0.00050673, 0.00050182, 0.00057955, 0.00043335, 0.00053859]), 'std_score_time': array([2.94973023e-05, 2.59929179e-05, 1.35302609e-04, 8.90849481e-05,
       9.01764500e-06, 3.44710723e-06, 1.16279848e-05, 1.26324954e-05,
       5.15469570e-06, 2.91091804e-05, 1.06297409e-04, 9.10575958e-05,
       8.57034376e-06, 4.67396746e-05, 8.62455936e-06, 4.27136982e-05,
       3.83690687e-05, 7.23496332e-05, 1.78305220e-05, 7.99977295e-05]), 'param_solver': masked_array(data=['adam', 'adam', 'sgd', 'sgd', 'adam', 'adam', 'sgd',
                   'adam', 'adam', 'adam', 'sgd', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'sgd', 'sgd'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[200, 200, 400, 300, 200, 200, 300, 400, 300, 200, 400,
                   300, 400, 400, 200, 300, 300, 300, 200, 400],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['invscaling', 'constant', 'invscaling', 'invscaling',
                   'constant', 'constant', 'constant', 'adaptive',
                   'adaptive', 'constant', 'adaptive', 'constant',
                   'invscaling', 'adaptive', 'invscaling', 'adaptive',
                   'invscaling', 'invscaling', 'invscaling', 'constant'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100,), (50,), (100,), (50,), (100,), (100,), (50,),
                   (100,), (150,), (150,), (50,), (50,), (50,), (50,),
                   (100,), (100,), (100,), (50,), (100,), (50,)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001,
                   0.001, 0.01, 0.0001, 0.0001, 0.001, 0.01, 0.0001, 0.01,
                   0.01, 0.01, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'tanh', 'relu', 'tanh',
                   'tanh', 'tanh', 'relu', 'tanh', 'tanh', 'tanh', 'relu',
                   'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (150,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (150,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}], 'split0_test_score': array([0.68421053, 0.52631579, 0.42105263, 0.42105263, 0.63157895,
       0.57894737, 0.63157895, 0.42105263, 0.42105263, 0.57894737,
       0.57894737, 0.52631579, 0.52631579, 0.63157895, 0.47368421,
       0.42105263, 0.42105263, 0.57894737, 0.42105263, 0.52631579]), 'split1_test_score': array([0.52631579, 0.47368421, 0.42105263, 0.68421053, 0.52631579,
       0.57894737, 0.57894737, 0.57894737, 0.57894737, 0.52631579,
       0.52631579, 0.52631579, 0.52631579, 0.57894737, 0.52631579,
       0.57894737, 0.57894737, 0.52631579, 0.57894737, 0.57894737]), 'split2_test_score': array([0.83333333, 0.83333333, 0.44444444, 0.44444444, 0.83333333,
       0.83333333, 0.44444444, 0.94444444, 0.88888889, 0.77777778,
       0.5       , 0.83333333, 0.88888889, 0.88888889, 0.83333333,
       0.88888889, 0.88888889, 0.77777778, 0.55555556, 0.55555556]), 'split3_test_score': array([0.55555556, 0.5       , 0.38888889, 0.44444444, 0.55555556,
       0.55555556, 0.55555556, 0.61111111, 0.61111111, 0.55555556,
       0.61111111, 0.44444444, 0.55555556, 0.61111111, 0.55555556,
       0.55555556, 0.55555556, 0.55555556, 0.55555556, 0.61111111]), 'split4_test_score': array([0.61111111, 0.44444444, 0.44444444, 0.55555556, 0.61111111,
       0.72222222, 0.5       , 0.72222222, 0.77777778, 0.61111111,
       0.55555556, 0.61111111, 0.77777778, 0.72222222, 0.61111111,
       0.72222222, 0.66666667, 0.66666667, 0.55555556, 0.55555556]), 'mean_test_score': array([0.64210526, 0.55555556, 0.42397661, 0.50994152, 0.63157895,
       0.65380117, 0.54210526, 0.65555556, 0.65555556, 0.60994152,
       0.55438596, 0.58830409, 0.65497076, 0.68654971, 0.6       ,
       0.63333333, 0.62222222, 0.62105263, 0.53333333, 0.56549708]), 'std_test_score': array([0.10972668, 0.14152772, 0.02042602, 0.09892552, 0.10768812,
       0.10749104, 0.06458216, 0.17363005, 0.16261517, 0.08841053,
       0.03890537, 0.1333718 , 0.15019111, 0.1118076 , 0.1248425 ,
       0.15954948, 0.15483719, 0.09130301, 0.05686665, 0.02826444]), 'rank_test_score': array([ 6, 15, 20, 19,  8,  5, 17,  2,  2, 11, 16, 13,  4,  1, 12,  7,  9,
       10, 18, 14], dtype=int32)}