Lasso_RandomizedSearchCV for the tae dataset with n_iter=20
CV-score:
-0.016089736885941043
test-score:
-0.006726806881171887
runtime:
0:00:00.229508
best parameters:
{'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00106316, 0.00113268, 0.00111432, 0.00592103, 0.00105457,
       0.00110793, 0.00099993, 0.00105309, 0.00106063, 0.00126319,
       0.0010797 , 0.00104046, 0.00100961, 0.00099001, 0.00104513,
       0.00110965, 0.00114083, 0.00103087, 0.00157781, 0.00130105]), 'std_fit_time': array([6.19305557e-05, 4.25469695e-05, 1.94748141e-05, 8.21842509e-03,
       1.41536321e-05, 1.22696418e-05, 1.36362088e-05, 1.46971083e-05,
       3.75254787e-05, 2.06672105e-04, 7.43324131e-05, 6.48393342e-06,
       1.59199353e-05, 6.02704060e-06, 2.34207151e-05, 2.11934672e-05,
       5.23870238e-06, 1.76751642e-06, 3.89305065e-04, 2.27375488e-04]), 'mean_score_time': array([0.00044646, 0.00043392, 0.00043235, 0.00084085, 0.00043445,
       0.00043182, 0.00043554, 0.00043931, 0.00044761, 0.00049739,
       0.00043583, 0.00043287, 0.00043211, 0.00043406, 0.00043273,
       0.00043144, 0.00043569, 0.00043607, 0.00057273, 0.00045919]), 'std_score_time': array([2.89285751e-05, 1.60998755e-06, 1.68317438e-06, 3.90010659e-04,
       4.11132084e-06, 1.68856918e-06, 1.99133043e-06, 8.66165215e-06,
       3.00042370e-05, 8.53970488e-05, 4.52367448e-06, 1.53479356e-06,
       2.48961973e-06, 8.19355548e-06, 1.97758115e-06, 8.34124359e-07,
       2.43420582e-06, 6.92317635e-06, 1.41917057e-04, 2.31194731e-05]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([-1.80528182e-02, -3.61689815e-03, -3.61689815e-03, -3.61689815e-03,
       -4.42799312e+00, -3.61689815e-03, -5.33333333e+00, -5.33333333e+00,
       -3.21730765e-01, -3.61689815e-03, -4.42799312e+00, -5.33333333e+00,
       -5.33333333e+00, -4.50727282e-01, -4.50876654e-01, -3.61689815e-03,
       -1.26363156e-02, -3.30549445e-01,  2.87223170e-04, -3.61689815e-03]), 'split1_test_score': array([ 0.03714777, -0.03700658, -0.03700658, -0.03700658, -4.63707015,
       -0.03700658, -5.56842105, -5.56842105,  0.02080326, -0.03700658,
       -4.63707015, -5.56842105, -5.56842105, -0.1288103 , -0.12851182,
       -0.03700658,  0.03224671,  0.01728915,  0.04548905, -0.03700658]), 'split2_test_score': array([ 1.40800961e-03, -6.52741514e-02, -6.52741514e-02, -6.52741514e-02,
       -6.40365125e+00, -6.52741514e-02, -7.33420366e+00, -7.33420366e+00,
       -5.18115139e-01, -6.52741514e-02, -6.40365125e+00, -7.33420366e+00,
       -7.33420366e+00, -8.96975181e-01, -8.96286841e-01, -6.52741514e-02,
        6.51206306e-04, -5.34363860e-01,  6.44581346e-04, -6.52741514e-02]), 'split3_test_score': array([-1.41420242e-01, -4.11184211e-03, -4.11184211e-03, -4.11184211e-03,
       -5.59226743e+00, -4.11184211e-03, -6.57894737e+00, -6.57894737e+00,
       -8.26040564e-01, -4.11184211e-03, -5.59226743e+00, -6.57894737e+00,
       -6.57894737e+00, -8.27682767e-01, -8.27924755e-01, -4.11184211e-03,
       -1.33115858e-01, -8.21017195e-01, -1.33144974e-01, -4.11184211e-03]), 'split4_test_score': array([ 5.70741040e-03, -4.65029762e-03, -4.65029762e-03, -4.65029762e-03,
       -5.99728740e+00, -4.65029762e-03, -6.85714286e+00, -6.85714286e+00,
       -3.80978445e-01, -4.65029762e-03, -5.99728740e+00, -6.85714286e+00,
       -6.85714286e+00, -3.12761987e-01, -3.12419625e-01, -4.65029762e-03,
        6.03090652e-03, -3.59295207e-01,  6.27543915e-03, -4.65029762e-03]), 'mean_test_score': array([-0.02304197, -0.02293195, -0.02293195, -0.02293195, -5.41165387,
       -0.02293195, -6.33440965, -6.33440965, -0.40521233, -0.02293195,
       -5.41165387, -6.33440965, -6.33440965, -0.5233915 , -0.52320394,
       -0.02293195, -0.02136467, -0.40558731, -0.01608974, -0.02293195]), 'std_test_score': array([0.06178259, 0.02470807, 0.02470807, 0.02470807, 0.76514249,
       0.02470807, 0.76439899, 0.76439899, 0.27527774, 0.02470807,
       0.76514249, 0.76439899, 0.76439899, 0.29580302, 0.29580019,
       0.02470807, 0.05774757, 0.27413994, 0.06089716, 0.02470807]), 'rank_test_score': array([10,  3,  3,  3, 15,  3, 17, 17, 11,  3, 15, 17, 17, 14, 13,  3,  2,
       12,  1,  3], dtype=int32)}