Ridge_RandomizedSearchCV for the breast-tissue dataset with n_iter=20
CV-score:
-0.04917990788684865
test-score:
-0.015692766695357907
runtime:
0:00:00.296966
best parameters:
{'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00125594, 0.00123696, 0.00130386, 0.00602937, 0.00122633,
       0.00115352, 0.0011888 , 0.00170474, 0.00224924, 0.00174546,
       0.00158205, 0.00115724, 0.00119977, 0.00119448, 0.00199409,
       0.00196276, 0.00148449, 0.00189595, 0.00192308, 0.00207829]), 'std_fit_time': array([7.10979074e-05, 5.51864390e-05, 7.79230413e-05, 8.37151982e-03,
       9.34039405e-05, 1.56133408e-05, 1.65417827e-05, 2.44382649e-05,
       4.25885260e-05, 3.59027033e-05, 4.47464355e-05, 1.63419545e-05,
       2.09409161e-05, 2.76405189e-05, 5.05288567e-05, 4.85582268e-05,
       1.11488158e-05, 5.39402527e-05, 4.18575034e-05, 7.96955961e-05]), 'mean_score_time': array([0.00043797, 0.00041451, 0.00043221, 0.00085816, 0.00059509,
       0.00059342, 0.00060234, 0.0006146 , 0.00060916, 0.00059919,
       0.00059481, 0.0005929 , 0.00060244, 0.00060182, 0.00062785,
       0.0006393 , 0.00063252, 0.00063367, 0.000664  , 0.00064154]), 'std_score_time': array([3.73665126e-05, 4.98426000e-06, 2.23663568e-05, 2.54115492e-04,
       5.11128509e-06, 3.83550216e-06, 1.21195460e-06, 1.14524334e-05,
       1.16985561e-05, 7.75853767e-06, 1.76107267e-06, 2.17680210e-06,
       3.68555333e-06, 3.57913857e-06, 1.66207678e-05, 1.01350053e-05,
       1.06335755e-05, 1.43783602e-05, 2.89680045e-05, 7.58515885e-06]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.18954474,  0.18731307,  0.18805667,  0.17362695,  0.14691081,
        0.04809997,  0.16231336,  0.16200986,  0.19062602,  0.16077204,
        0.06567209, -0.7399983 ,  0.16231336,  0.14691081,  0.18876869,
        0.065667  ,  0.09400098, -0.00343406,  0.04809153,  0.16065633]), 'split1_test_score': array([-1.32645185, -1.29285726, -1.29150079, -1.09890101, -0.84622334,
       -0.42445981, -1.14245743, -1.09241223, -1.35242195, -1.10100534,
       -0.30490205, -1.18918264, -1.14245743, -0.84622334, -1.32158522,
       -0.30474503, -0.45303227, -0.10368572, -0.42443713, -1.10109361]), 'split2_test_score': array([ 0.02569082,  0.02840936,  0.02887545,  0.03254685,  0.01564038,
        0.07900419, -0.0110644 , -0.00663566,  0.02704184, -0.0071573 ,
        0.02312022, -0.28117203, -0.0110644 ,  0.01564038,  0.02780754,
        0.0230741 ,  0.0314567 , -0.00541537,  0.0790149 , -0.00764928]), 'split3_test_score': array([ 1.07123444e-01,  1.05990766e-01,  1.06558017e-01,  9.41277144e-02,
       -2.46835601e-02, -8.94019337e-02,  3.13223855e-03, -3.15382383e-03,
        1.09018137e-01, -4.46072888e-04,  3.37420399e-02, -6.44293899e-01,
        3.13223855e-03, -2.46835601e-02,  1.07334043e-01,  3.39718730e-02,
        4.76472576e-02,  2.42825607e-04, -8.94035584e-02, -6.63771741e-04]), 'split4_test_score': array([-0.18211846, -0.17253373, -0.17358338, -0.11223401, -0.12729371,
       -0.00382421, -0.24719752, -0.21438207, -0.19337092, -0.22729249,
       -0.06516493, -0.16149277, -0.24719752, -0.12729371, -0.18184945,
       -0.06519241, -0.04672268, -0.13360721, -0.00383471, -0.22703287]), 'mean_test_score': array([-0.23724226, -0.22873556, -0.22831881, -0.1821667 , -0.16712988,
       -0.07811636, -0.24705475, -0.23091478, -0.24382137, -0.23502583,
       -0.04950653, -0.60322793, -0.24705475, -0.16712988, -0.23590488,
       -0.04944489, -0.06533   , -0.04917991, -0.07811379, -0.23515664]), 'std_test_score': array([0.55844156, 0.54530273, 0.54497923, 0.46782946, 0.35073418,
       0.18232822, 0.46639323, 0.44699377, 0.56888446, 0.45024171,
       0.13486522, 0.36402896, 0.46639323, 0.35073418, 0.55665584,
       0.13482897, 0.1990865 , 0.05753169, 0.18231945, 0.45018379]), 'rank_test_score': array([16, 11, 10,  9,  7,  6, 18, 12, 17, 13,  3, 20, 18,  8, 15,  2,  4,
        1,  5, 14], dtype=int32)}