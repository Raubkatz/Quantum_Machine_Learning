LightGBM_RandomizedSearchCV for the wine dataset with n_iter=20
CV-score:
0.9859605911330049
test-score:
1.0
runtime:
0:00:03.180770
best parameters:
{'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.02614412, 0.04037948, 0.03826942, 0.03183856, 0.03292108,
       0.02428102, 0.03548274, 0.01719522, 0.05933614, 0.02534776,
       0.00975537, 0.03289728, 0.02006741, 0.02737737, 0.02525115,
       0.03136406, 0.01870179, 0.02944069, 0.0375453 , 0.02791705]), 'std_fit_time': array([0.00294735, 0.01164885, 0.01633707, 0.00693752, 0.00578239,
       0.00452027, 0.00737083, 0.00093507, 0.01809282, 0.00635934,
       0.00018431, 0.01301149, 0.00462423, 0.00519557, 0.01078073,
       0.01161087, 0.00401891, 0.00601596, 0.01566901, 0.00830806]), 'mean_score_time': array([0.00069747, 0.00078497, 0.00162215, 0.0010582 , 0.0008811 ,
       0.00140448, 0.00079284, 0.00062675, 0.00269284, 0.00072122,
       0.00052357, 0.00213475, 0.00081859, 0.00081401, 0.00084915,
       0.0007885 , 0.00157561, 0.00083952, 0.00164495, 0.00073104]), 'std_score_time': array([7.59098098e-05, 7.88101764e-05, 1.60725354e-03, 6.40461315e-04,
       2.62566674e-04, 1.23575115e-03, 1.21784864e-04, 5.98265142e-05,
       2.60632525e-03, 7.59790299e-05, 1.06741252e-05, 2.54351339e-03,
       4.80225578e-04, 1.03296995e-04, 4.39983995e-04, 2.02459543e-04,
       1.28811609e-03, 2.51608918e-04, 1.72003745e-03, 1.43909454e-04]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       0.93103448, 1.        , 0.96551724, 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ]), 'split1_test_score': array([0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       1.        , 0.96551724, 0.96551724, 0.96551724, 0.96551724]), 'split2_test_score': array([0.96428571, 0.96428571, 1.        , 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 1.        ,
       0.96428571, 0.96428571, 0.96428571, 1.        , 0.96428571,
       0.96428571, 1.        , 0.96428571, 0.96428571, 1.        ]), 'split3_test_score': array([0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.92857143, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571]), 'split4_test_score': array([1.        , 1.        , 1.        , 0.96428571, 0.96428571,
       1.        , 0.96428571, 1.        , 1.        , 1.        ,
       1.        , 0.96428571, 1.        , 1.        , 0.96428571,
       1.        , 1.        , 1.        , 0.96428571, 0.96428571]), 'mean_test_score': array([0.97881773, 0.97881773, 0.98596059, 0.97167488, 0.97167488,
       0.95788177, 0.97167488, 0.97192118, 0.97881773, 0.98596059,
       0.97881773, 0.97167488, 0.97881773, 0.98596059, 0.97167488,
       0.98571429, 0.98596059, 0.97881773, 0.97167488, 0.97881773]), 'std_test_score': array([0.01730109, 0.01730109, 0.0171991 , 0.01417059, 0.01417059,
       0.02627976, 0.01417059, 0.01405021, 0.01730109, 0.0171991 ,
       0.01730109, 0.01417059, 0.01730109, 0.0171991 , 0.01417059,
       0.01749636, 0.0171991 , 0.01730109, 0.01417059, 0.01730109]), 'rank_test_score': array([ 6,  6,  1, 14, 14, 20, 14, 13,  6,  1,  6, 14,  6,  1, 14,  5,  1,
        6, 14,  6], dtype=int32)}