SVM_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.706062685884237
test-score:
0.7435897435897436
runtime:
0:00:00.484485
best parameters:
{'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00276875, 0.00356207, 0.00397787, 0.00273161, 0.00351715,
       0.00222468, 0.00215516, 0.00343032, 0.00243788, 0.00498724,
       0.00336871, 0.00475068, 0.00303965, 0.00372443, 0.004458  ,
       0.00387774, 0.0030437 , 0.00283713, 0.00247841, 0.00362935]), 'std_fit_time': array([1.70656215e-04, 7.37802232e-05, 7.23418075e-05, 1.32123686e-04,
       4.33418485e-05, 7.56354525e-06, 2.45890826e-05, 2.64571154e-05,
       6.06752378e-05, 6.15262932e-04, 1.02369131e-04, 3.33289915e-04,
       1.74052839e-04, 2.57737987e-04, 1.33579817e-04, 6.64829000e-05,
       2.96779647e-04, 7.19808395e-05, 5.49827361e-05, 2.54987555e-04]), 'mean_score_time': array([0.0007833 , 0.00099034, 0.00108128, 0.00075874, 0.00082855,
       0.00066314, 0.00064769, 0.00088525, 0.00066895, 0.00134053,
       0.00096664, 0.00129414, 0.00099683, 0.00101094, 0.00120821,
       0.00103402, 0.00083637, 0.00071959, 0.00076995, 0.00094199]), 'std_score_time': array([5.78534559e-05, 2.09344003e-05, 8.07447383e-06, 5.04534725e-05,
       5.04727120e-06, 6.16135609e-06, 2.30128153e-05, 1.46039894e-05,
       1.56896092e-05, 1.26327708e-04, 1.32828038e-05, 1.66843816e-04,
       1.01899666e-04, 1.30864689e-04, 6.02180579e-05, 2.75296556e-05,
       4.42138882e-05, 1.18687441e-05, 7.84007297e-05, 5.40931773e-05]), 'param_verbose': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.0001, 0.01, 0.01, 0.0001, 0.001, 0.001, 0.01, 0.001,
                   0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001, 0.001,
                   0.01, 0.0001, 0.0001, 0.01],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_shrinking': masked_array(data=[False, True, True, True, False, True, True, False,
                   False, False, False, True, False, True, False, True,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_probability': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[300, 400, 300, 400, 400, 200, 200, 400, 200, 200, 200,
                   300, 300, 400, 200, 200, 300, 400, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['poly', 'sigmoid', 'sigmoid', 'linear', 'rbf',
                   'linear', 'linear', 'poly', 'poly', 'sigmoid', 'rbf',
                   'rbf', 'poly', 'rbf', 'sigmoid', 'sigmoid', 'linear',
                   'linear', 'linear', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=['auto', 'auto', 'scale', 'scale', 'scale', 'auto',
                   'scale', 'auto', 'scale', 'auto', 'scale', 'auto',
                   'auto', 'scale', 'auto', 'auto', 'scale', 'auto',
                   'scale', 'scale'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 4, 3, 4, 2, 3, 2, 2, 3, 2, 2, 2, 4, 4, 3, 2, 4, 4,
                   4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_decision_function_shape': masked_array(data=['ovr', 'ovo', 'ovr', 'ovo', 'ovr', 'ovr', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovo', 'ovo', 'ovo', 'ovo', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovr', 'ovo'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_coef0': masked_array(data=[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0,
                   0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 1.0, 2.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_class_weight': masked_array(data=[None, None, None, None, None, None, None, 'balanced',
                   'balanced', None, None, 'balanced', None, None, None,
                   None, 'balanced', None, None, 'balanced'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_cache_size': masked_array(data=[200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200, 200, 200, 200, 200, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_break_ties': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[100, 0.1, 1, 10, 10, 1, 100, 0.1, 10, 10, 100, 1, 0.1,
                   0.1, 0.1, 1, 0.1, 1, 100, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'sigmoid', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'poly', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'poly', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'rbf', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 100}], 'split0_test_score': array([0.70212766, 0.70212766, 0.72340426, 0.70212766, 0.68085106,
       0.70212766, 0.62765957, 0.36170213, 0.54255319, 0.70212766,
       0.67021277, 0.35106383, 0.70212766, 0.70212766, 0.70212766,
       0.70212766, 0.29787234, 0.70212766, 0.62765957, 0.70212766]), 'split1_test_score': array([0.70967742, 0.70967742, 0.6344086 , 0.70967742, 0.72043011,
       0.70967742, 0.65591398, 0.3655914 , 0.4516129 , 0.70967742,
       0.62365591, 0.3655914 , 0.70967742, 0.70967742, 0.70967742,
       0.70967742, 0.29032258, 0.70967742, 0.65591398, 0.56989247]), 'split2_test_score': array([0.70967742, 0.70967742, 0.61290323, 0.70967742, 0.72043011,
       0.70967742, 0.5483871 , 0.32258065, 0.43010753, 0.70967742,
       0.50537634, 0.35483871, 0.70967742, 0.70967742, 0.70967742,
       0.70967742, 0.29032258, 0.70967742, 0.5483871 , 0.55913978]), 'split3_test_score': array([0.70967742, 0.70967742, 0.6344086 , 0.70967742, 0.70967742,
       0.70967742, 0.60215054, 0.31182796, 0.38709677, 0.70967742,
       0.60215054, 0.30107527, 0.70967742, 0.70967742, 0.70967742,
       0.70967742, 0.29032258, 0.70967742, 0.60215054, 0.51612903]), 'split4_test_score': array([0.69892473, 0.69892473, 0.65591398, 0.69892473, 0.69892473,
       0.69892473, 0.59139785, 0.31182796, 0.49462366, 0.69892473,
       0.6344086 , 0.31182796, 0.69892473, 0.69892473, 0.69892473,
       0.69892473, 0.30107527, 0.69892473, 0.59139785, 0.72043011]), 'mean_test_score': array([0.70601693, 0.70601693, 0.65220773, 0.70601693, 0.70606269,
       0.70601693, 0.60510181, 0.33470602, 0.46119881, 0.70601693,
       0.60716083, 0.33687943, 0.70601693, 0.70601693, 0.70601693,
       0.70601693, 0.29398307, 0.70601693, 0.60510181, 0.61354381]), 'std_test_score': array([0.00459616, 0.00459616, 0.03810812, 0.00459616, 0.01491635,
       0.00459616, 0.03606604, 0.02398555, 0.05345171, 0.00459616,
       0.05545315, 0.02552498, 0.00459616, 0.00459616, 0.00459616,
       0.00459616, 0.00459616, 0.00459616, 0.03606604, 0.08200812]), 'rank_test_score': array([ 2,  2, 12,  2,  1,  2, 15, 19, 17,  2, 14, 18,  2,  2,  2,  2, 20,
        2, 15, 13], dtype=int32)}