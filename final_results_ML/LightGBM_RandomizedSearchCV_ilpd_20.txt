LightGBM_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.6996110729810112
test-score:
0.7521367521367521
runtime:
0:00:03.062553
best parameters:
{'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.02983055, 0.03890471, 0.02979126, 0.03446546, 0.02493167,
       0.02554564, 0.03175521, 0.02685142, 0.03789864, 0.03765011,
       0.01803102, 0.01564441, 0.02665577, 0.02307115, 0.02659125,
       0.03507671, 0.01501455, 0.01948853, 0.0321703 , 0.02360606]), 'std_fit_time': array([0.00540118, 0.02060759, 0.00983771, 0.00478238, 0.00404985,
       0.00609111, 0.00598772, 0.00700591, 0.00937304, 0.01344304,
       0.00115948, 0.00159796, 0.00529053, 0.0047726 , 0.01375956,
       0.00871574, 0.00481756, 0.00477557, 0.00639841, 0.0045588 ]), 'mean_score_time': array([0.00131655, 0.00132585, 0.00220494, 0.00190339, 0.00130811,
       0.00153761, 0.00206881, 0.00296092, 0.00134997, 0.00130677,
       0.00223112, 0.00115838, 0.00354395, 0.00139236, 0.00145216,
       0.00140543, 0.00121593, 0.00184956, 0.00151939, 0.00152974]), 'std_score_time': array([1.07563831e-04, 1.10129668e-04, 1.25272716e-03, 6.65335495e-04,
       2.34573574e-04, 4.03323583e-04, 1.36550117e-03, 3.57670668e-03,
       1.51628848e-04, 1.53149079e-04, 1.20269961e-03, 9.95245625e-05,
       3.94542133e-03, 5.35409315e-04, 6.15836240e-04, 1.30869989e-04,
       3.22470660e-04, 7.45395936e-04, 4.89036513e-04, 5.38073356e-04]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.67021277, 0.64893617, 0.61702128, 0.64893617, 0.69148936,
       0.68085106, 0.65957447, 0.68085106, 0.64893617, 0.63829787,
       0.63829787, 0.63829787, 0.65957447, 0.64893617, 0.61702128,
       0.65957447, 0.63829787, 0.62765957, 0.61702128, 0.68085106]), 'split1_test_score': array([0.64516129, 0.67741935, 0.6344086 , 0.65591398, 0.62365591,
       0.66666667, 0.67741935, 0.67741935, 0.66666667, 0.6344086 ,
       0.62365591, 0.62365591, 0.64516129, 0.66666667, 0.6344086 ,
       0.64516129, 0.65591398, 0.6344086 , 0.64516129, 0.65591398]), 'split2_test_score': array([0.70967742, 0.68817204, 0.69892473, 0.72043011, 0.70967742,
       0.70967742, 0.7311828 , 0.72043011, 0.7311828 , 0.68817204,
       0.70967742, 0.69892473, 0.69892473, 0.67741935, 0.70967742,
       0.72043011, 0.70967742, 0.69892473, 0.69892473, 0.68817204]), 'split3_test_score': array([0.68817204, 0.62365591, 0.6344086 , 0.62365591, 0.68817204,
       0.70967742, 0.62365591, 0.70967742, 0.6344086 , 0.65591398,
       0.6344086 , 0.6344086 , 0.62365591, 0.61290323, 0.61290323,
       0.67741935, 0.6344086 , 0.62365591, 0.6344086 , 0.6344086 ]), 'split4_test_score': array([0.74193548, 0.76344086, 0.76344086, 0.72043011, 0.72043011,
       0.72043011, 0.78494624, 0.70967742, 0.75268817, 0.74193548,
       0.74193548, 0.78494624, 0.76344086, 0.76344086, 0.7311828 ,
       0.69892473, 0.7311828 , 0.70967742, 0.74193548, 0.75268817]), 'mean_test_score': array([0.6910318 , 0.68032487, 0.66964081, 0.67387326, 0.68668497,
       0.69746054, 0.69535575, 0.69961107, 0.68677648, 0.6717456 ,
       0.66959506, 0.67604667, 0.67815145, 0.67387326, 0.66103866,
       0.68030199, 0.67389613, 0.65886525, 0.66749028, 0.68240677]), 'std_test_score': array([0.03311966, 0.04727559, 0.05460298, 0.03950002, 0.03366108,
       0.02024966, 0.056662  , 0.01720759, 0.04667967, 0.0398996 ,
       0.04726042, 0.06047481, 0.04921185, 0.04985192, 0.04949674,
       0.02694394, 0.0392732 , 0.03741192, 0.04619592, 0.03995204]), 'rank_test_score': array([ 4,  8, 16, 13,  6,  2,  3,  1,  5, 15, 17, 11, 10, 13, 19,  9, 12,
       20, 18,  7], dtype=int32)}