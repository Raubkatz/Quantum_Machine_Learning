LightGBM_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9666666666666668
test-score:
1.0
runtime:
0:00:02.971164
best parameters:
{'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.02461824, 0.04158063, 0.0343637 , 0.02636623, 0.02466984,
       0.01437917, 0.03043184, 0.01941786, 0.0538465 , 0.02769251,
       0.01124511, 0.01477752, 0.02249007, 0.02649522, 0.02773185,
       0.0466373 , 0.01344671, 0.02834067, 0.02977934, 0.03283358]), 'std_fit_time': array([0.00992584, 0.02372905, 0.00793069, 0.00550026, 0.00484558,
       0.00190462, 0.00284135, 0.00488748, 0.03047236, 0.00918858,
       0.00241061, 0.00037302, 0.00456998, 0.00699736, 0.00903848,
       0.03203449, 0.00203706, 0.00439729, 0.00903499, 0.00653088]), 'mean_score_time': array([0.00064559, 0.00083103, 0.00075145, 0.00077543, 0.00187268,
       0.00058508, 0.00088272, 0.00069599, 0.00081348, 0.00072527,
       0.00078506, 0.00056286, 0.00090137, 0.00116816, 0.00078764,
       0.00077271, 0.00083861, 0.00190053, 0.00075321, 0.00165167]), 'std_score_time': array([1.15920025e-04, 1.84676427e-04, 7.77309509e-05, 3.04685497e-04,
       1.48654218e-03, 1.00620437e-04, 1.45840986e-04, 1.00290021e-04,
       4.48181272e-05, 1.54416998e-04, 1.23866416e-04, 1.79960390e-05,
       3.34217018e-04, 8.38100465e-04, 1.84715945e-04, 5.98372688e-05,
       3.16986789e-04, 1.60886057e-03, 1.33215484e-04, 1.61066277e-03]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split1_test_score': array([1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ,
       1.        , 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split2_test_score': array([0.79166667, 0.83333333, 0.91666667, 0.875     , 0.79166667,
       0.79166667, 0.875     , 0.79166667, 0.875     , 0.91666667,
       0.875     , 0.875     , 0.875     , 0.91666667, 0.875     ,
       0.83333333, 0.83333333, 0.875     , 0.875     , 0.83333333]), 'split3_test_score': array([1.        , 0.91666667, 0.95833333, 0.95833333, 1.        ,
       0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       1.        , 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 1.        , 0.95833333, 0.95833333, 0.95833333]), 'split4_test_score': array([0.91666667, 1.        , 1.        , 0.95833333, 0.91666667,
       0.91666667, 0.95833333, 0.91666667, 0.95833333, 1.        ,
       0.95833333, 0.95833333, 0.95833333, 1.        , 1.        ,
       1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ]), 'mean_test_score': array([0.93333333, 0.93333333, 0.96666667, 0.94166667, 0.93333333,
       0.925     , 0.94166667, 0.94166667, 0.94166667, 0.95833333,
       0.95      , 0.94166667, 0.94166667, 0.95833333, 0.95      ,
       0.94166667, 0.94166667, 0.94166667, 0.94166667, 0.94166667]), 'std_test_score': array([0.07728015, 0.05651942, 0.03118048, 0.03333333, 0.07728015,
       0.07168604, 0.03333333, 0.08164966, 0.03333333, 0.02635231,
       0.04082483, 0.03333333, 0.03333333, 0.02635231, 0.04082483,
       0.05651942, 0.05651942, 0.03333333, 0.03333333, 0.05651942]), 'rank_test_score': array([17, 19,  1,  6, 17, 20,  6, 15,  6,  2,  4,  6,  6,  2,  4,  6, 15,
        6,  6,  6], dtype=int32)}