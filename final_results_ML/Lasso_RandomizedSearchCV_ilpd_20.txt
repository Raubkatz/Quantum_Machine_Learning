Lasso_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.08504584618994962
test-score:
0.11480660190324643
runtime:
0:00:00.237455
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00117273, 0.0011622 , 0.00115094, 0.00652947, 0.00108128,
       0.00116248, 0.00104647, 0.00108557, 0.001087  , 0.00113378,
       0.00108981, 0.00124555, 0.00108171, 0.00114827, 0.00112267,
       0.00117664, 0.00120792, 0.00127134, 0.00153012, 0.00135474]), 'std_fit_time': array([9.79095904e-05, 3.20729619e-05, 1.90696712e-05, 9.52262611e-03,
       1.50336101e-06, 3.34942042e-06, 6.38926206e-06, 4.52719153e-06,
       1.79938910e-06, 9.87939390e-06, 4.76121365e-06, 2.05188708e-04,
       4.00020622e-05, 2.97216850e-05, 4.44619392e-05, 1.29787331e-05,
       9.15676343e-06, 2.20558016e-04, 2.78085871e-04, 1.46362243e-04]), 'mean_score_time': array([0.00044379, 0.00043068, 0.00043006, 0.00077672, 0.00043283,
       0.00043015, 0.00043292, 0.0004323 , 0.00043917, 0.00043106,
       0.0004312 , 0.00048814, 0.00043221, 0.00043244, 0.00043297,
       0.00043631, 0.00043054, 0.00050697, 0.0005218 , 0.00057774]), 'std_score_time': array([2.57565347e-05, 1.64905705e-06, 1.34363201e-06, 3.86334966e-04,
       3.25019706e-06, 1.93926806e-06, 1.46506228e-06, 1.25617408e-06,
       6.93793969e-06, 1.31454933e-06, 5.56082906e-07, 7.62496164e-05,
       2.40507511e-06, 3.61390978e-06, 7.07263802e-07, 1.11145003e-05,
       1.61280961e-06, 1.01749787e-04, 1.06097993e-04, 1.08942150e-04]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 7.76575310e-02, -2.37324078e-03, -2.37324078e-03, -2.37324078e-03,
       -8.14479638e+00, -2.37324078e-03, -8.14479638e+00, -8.14479638e+00,
       -5.36022475e-01, -2.37324078e-03, -8.14479638e+00, -8.14479638e+00,
       -8.14479638e+00, -8.21321554e-01, -8.22888667e-01, -2.37324078e-03,
        7.32559317e-02, -6.03286371e-01, -3.35899318e-02, -2.37324078e-03]), 'split1_test_score': array([ 8.32997055e-02, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -2.17265582e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -4.96391807e-01, -4.99150582e-01, -1.61173716e-03,
        8.26345339e-02, -2.64227106e-01,  7.26303244e-03, -1.61173716e-03]), 'split2_test_score': array([ 0.10042876, -0.02524279, -0.02524279, -0.02524279, -8.01818182,
       -0.02524279, -8.01818182, -8.01818182, -0.14538021, -0.02524279,
       -8.01818182, -8.01818182, -8.01818182, -0.67250895, -0.67152017,
       -0.02524279,  0.08412372, -0.16617155,  0.0096016 , -0.02524279]), 'split3_test_score': array([ 2.74420520e-02, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -2.42834134e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -4.37090189e-01, -4.39387707e-01, -1.61173716e-03,
        2.75591618e-02, -2.16157199e-01,  1.19781120e-02, -1.61173716e-03]), 'split4_test_score': array([ 1.36401184e-01, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -3.38560306e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -5.25402536e-01, -5.28279115e-01, -1.61173716e-03,
        9.70584263e-02, -3.42655590e-01,  4.19222464e-02, -1.61173716e-03]), 'mean_test_score': array([ 8.50458462e-02, -6.49024905e-03, -6.49024905e-03, -6.49024905e-03,
       -8.11009277e+00, -6.49024905e-03, -8.11009277e+00, -8.11009277e+00,
       -2.96012541e-01, -6.49024905e-03, -8.11009277e+00, -8.11009277e+00,
       -8.11009277e+00, -5.90543007e-01, -5.92245248e-01, -6.49024905e-03,
        7.29263547e-02, -3.18499562e-01,  7.43501096e-03, -6.49024905e-03]), 'std_test_score': array([0.03535488, 0.00938091, 0.00938091, 0.00938091, 0.04635268,
       0.00938091, 0.04635268, 0.04635268, 0.13500682, 0.00938091,
       0.04635268, 0.04635268, 0.04635268, 0.13901989, 0.13827842,
       0.00938091, 0.02391768, 0.15382479, 0.02407396, 0.00938091]), 'rank_test_score': array([ 1,  4,  4,  4, 15,  4, 15, 15, 11,  4, 15, 15, 15, 13, 14,  4,  2,
       12,  3,  4], dtype=int32)}