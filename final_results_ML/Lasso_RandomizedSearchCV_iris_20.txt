Lasso_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9124242061887313
test-score:
0.9453983169131964
runtime:
0:00:00.173051
best parameters:
{'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00069914, 0.00067439, 0.00070271, 0.00623045, 0.00066972,
       0.00071549, 0.00062332, 0.00057297, 0.00089688, 0.00061831,
       0.00058045, 0.00056763, 0.00054669, 0.00062137, 0.00056539,
       0.00065365, 0.00068331, 0.0005661 , 0.00068636, 0.00058556]), 'std_fit_time': array([1.13253051e-04, 1.40336019e-05, 1.71473188e-05, 9.69573020e-03,
       5.00224679e-05, 1.31903880e-05, 1.54370092e-05, 7.26515829e-06,
       3.99958360e-04, 6.56166741e-06, 1.39442057e-05, 3.11006047e-06,
       1.66552059e-06, 6.10815930e-05, 6.59967433e-06, 1.04889002e-05,
       7.59803765e-06, 6.10575039e-06, 9.54079542e-06, 6.36358795e-06]), 'mean_score_time': array([0.00033078, 0.00032287, 0.00032616, 0.00079937, 0.00034518,
       0.00038342, 0.00037413, 0.00031233, 0.00032306, 0.00031462,
       0.00031357, 0.0003159 , 0.00031157, 0.00031257, 0.00031486,
       0.00031567, 0.00031343, 0.00031338, 0.00031319, 0.00031157]), 'std_score_time': array([2.74906444e-05, 1.43125832e-05, 6.46813391e-06, 5.47296013e-04,
       1.06233069e-05, 8.47563797e-06, 3.10143627e-05, 7.23159356e-07,
       1.39827974e-05, 1.23977661e-06, 8.84401178e-07, 6.71985208e-06,
       1.21943587e-06, 1.78416128e-06, 1.19304619e-06, 7.51680506e-06,
       1.02934995e-06, 6.50319180e-07, 1.37871097e-06, 6.46813391e-07]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.91996933, -0.06131114, -0.06131114, -0.06131114,  0.74784435,
       -0.06131114, -1.08695652, -1.08695652,  0.91667395, -0.06131114,
        0.65372991, -1.08695652, -1.08695652,  0.90158393,  0.78430354,
       -0.06131114,  0.91731136,  0.85644243,  0.90949363,  0.90664517]), 'split1_test_score': array([ 0.94125442, -0.01332237, -0.01332237, -0.01332237,  0.69950749,
       -0.01332237, -1.27368421, -1.27368421,  0.94708905, -0.01332237,
        0.62471609, -1.27368421, -1.27368421,  0.8751415 ,  0.7665211 ,
       -0.01332237,  0.94493445,  0.89076127,  0.93949791,  0.89293243]), 'split2_test_score': array([ 0.89606035, -0.03070175, -0.03070175, -0.03070175,  0.72215795,
       -0.03070175, -1.10526316, -1.10526316,  0.88893917, -0.03070175,
        0.6482236 , -1.10526316, -1.10526316,  0.89042943,  0.79423204,
       -0.03070175,  0.89787012,  0.8340899 ,  0.88365373,  0.90120955]), 'split3_test_score': array([ 0.89104961, -0.00723473, -0.00723473, -0.00723473,  0.66632974,
       -0.00723473, -2.0096463 , -2.0096463 ,  0.89893962, -0.00723473,
        0.62882192, -2.0096463 , -2.0096463 ,  0.82147673,  0.74155698,
       -0.00723473,  0.89840607,  0.87573027,  0.90248137,  0.8504623 ]), 'split4_test_score': array([ 0.91058867, -0.22562674, -0.22562674, -0.22562674,  0.50871249,
       -0.22562674, -2.67688022, -2.67688022,  0.89614075, -0.22562674,
        0.45107914, -2.67688022, -2.67688022,  0.85254385,  0.76500451,
       -0.22562674,  0.90359903,  0.86023691,  0.90786923,  0.87402522]), 'mean_test_score': array([ 0.91178448, -0.06763935, -0.06763935, -0.06763935,  0.66891041,
       -0.06763935, -1.63048608, -1.63048608,  0.90955651, -0.06763935,
        0.60131413, -1.63048608, -1.63048608,  0.86823509,  0.77032363,
       -0.06763935,  0.91242421,  0.86345216,  0.90859917,  0.88505494]), 'std_test_score': array([0.01796709, 0.08119544, 0.08119544, 0.08119544, 0.08446547,
       0.08119544, 0.62246193, 0.62246193, 0.02086684, 0.08119544,
       0.07592469, 0.62246193, 0.62246193, 0.02858318, 0.01809598,
       0.08119544, 0.01770318, 0.01906912, 0.01797647, 0.02053032]), 'rank_test_score': array([ 2, 11, 11, 11,  9, 11, 17, 17,  3, 11, 10, 17, 17,  6,  8, 11,  1,
        7,  4,  5], dtype=int32)}