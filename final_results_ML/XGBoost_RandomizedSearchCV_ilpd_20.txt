XGBoost_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.6952642415923129
test-score:
0.7350427350427351
runtime:
0:00:04.752627
best parameters:
{'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.04248405, 0.05906811, 0.04029398, 0.03661132, 0.04009008,
       0.04097862, 0.04165859, 0.03596277, 0.0730041 , 0.06489315,
       0.02132578, 0.03020449, 0.04178581, 0.03972101, 0.03870473,
       0.04741797, 0.01497207, 0.04025135, 0.07841454, 0.03495398]), 'std_fit_time': array([0.00601721, 0.01735706, 0.00757264, 0.00753687, 0.00747949,
       0.01988089, 0.00946933, 0.01475768, 0.03130635, 0.02642337,
       0.00534411, 0.00581436, 0.00976973, 0.01339239, 0.02016691,
       0.01342188, 0.00025971, 0.01552273, 0.02348831, 0.00772776]), 'mean_score_time': array([0.00261869, 0.00282564, 0.00213876, 0.00233684, 0.00234876,
       0.00212226, 0.00232978, 0.00187941, 0.00276513, 0.00200629,
       0.00172796, 0.00263052, 0.00247536, 0.00277128, 0.00285611,
       0.00207677, 0.00160623, 0.00208116, 0.00360503, 0.00187473]), 'std_score_time': array([1.43056478e-03, 1.06528621e-03, 3.87770286e-04, 1.04677448e-03,
       8.41234063e-04, 4.24814880e-04, 8.81590930e-04, 2.76143533e-04,
       1.53146130e-03, 1.96915619e-04, 1.69086792e-04, 9.76577836e-04,
       1.07094844e-03, 1.92439771e-03, 2.00548994e-03, 3.33811098e-04,
       1.83070696e-05, 5.42755065e-04, 1.68747692e-03, 2.10012932e-04]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.65957447, 0.72340426, 0.63829787, 0.65957447, 0.65957447,
       0.64893617, 0.64893617, 0.63829787, 0.70212766, 0.65957447,
       0.61702128, 0.67021277, 0.62765957, 0.64893617, 0.69148936,
       0.67021277, 0.65957447, 0.70212766, 0.64893617, 0.67021277]), 'split1_test_score': array([0.64516129, 0.6344086 , 0.6344086 , 0.62365591, 0.61290323,
       0.61290323, 0.6344086 , 0.67741935, 0.65591398, 0.64516129,
       0.62365591, 0.61290323, 0.65591398, 0.64516129, 0.67741935,
       0.65591398, 0.6344086 , 0.61290323, 0.6344086 , 0.6344086 ]), 'split2_test_score': array([0.72043011, 0.67741935, 0.74193548, 0.70967742, 0.69892473,
       0.68817204, 0.70967742, 0.70967742, 0.7311828 , 0.69892473,
       0.66666667, 0.66666667, 0.66666667, 0.68817204, 0.65591398,
       0.67741935, 0.67741935, 0.69892473, 0.72043011, 0.75268817]), 'split3_test_score': array([0.61290323, 0.66666667, 0.65591398, 0.64516129, 0.6344086 ,
       0.6344086 , 0.65591398, 0.64516129, 0.66666667, 0.66666667,
       0.56989247, 0.64516129, 0.62365591, 0.62365591, 0.65591398,
       0.64516129, 0.65591398, 0.67741935, 0.61290323, 0.66666667]), 'split4_test_score': array([0.75268817, 0.75268817, 0.74193548, 0.76344086, 0.75268817,
       0.76344086, 0.7311828 , 0.72043011, 0.72043011, 0.7311828 ,
       0.70967742, 0.7311828 , 0.78494624, 0.75268817, 0.76344086,
       0.74193548, 0.76344086, 0.7311828 , 0.77419355, 0.74193548]), 'mean_test_score': array([0.67815145, 0.69091741, 0.68249828, 0.68030199, 0.67169984,
       0.66957218, 0.67602379, 0.67819721, 0.69526424, 0.68030199,
       0.63738275, 0.66522535, 0.67176847, 0.67172272, 0.68883551,
       0.67812857, 0.67815145, 0.68451155, 0.67817433, 0.69318234]), 'std_test_score': array([0.05105682, 0.04203466, 0.04906848, 0.05029565, 0.04958832,
       0.05297353, 0.03753678, 0.03304105, 0.02945109, 0.03093892,
       0.04741734, 0.03877501, 0.05890163, 0.04552173, 0.03967615,
       0.03380774, 0.04478363, 0.03968457, 0.06005975, 0.04604964]), 'rank_test_score': array([11,  3,  6,  7, 17, 18, 14,  9,  1,  7, 20, 19, 15, 16,  4, 13, 11,
        5, 10,  2], dtype=int32)}