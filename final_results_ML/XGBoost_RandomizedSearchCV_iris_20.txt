XGBoost_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9583333333333334
test-score:
1.0
runtime:
0:00:03.809085
best parameters:
{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.03232412, 0.04667854, 0.04207902, 0.03652959, 0.03809195,
       0.02533727, 0.04149423, 0.02669234, 0.05078592, 0.03341408,
       0.01164575, 0.0318408 , 0.03379202, 0.02745566, 0.02810473,
       0.03999171, 0.01455288, 0.04480643, 0.04678864, 0.04320216]), 'std_fit_time': array([0.00512892, 0.01211736, 0.01338693, 0.01068169, 0.00628301,
       0.00758047, 0.01456594, 0.00646541, 0.01334677, 0.00591108,
       0.00042051, 0.00897611, 0.01380633, 0.00746921, 0.00671704,
       0.01216465, 0.00413273, 0.0059243 , 0.01576605, 0.01528633]), 'mean_score_time': array([0.00196857, 0.00244074, 0.00160007, 0.00238876, 0.00174069,
       0.00217214, 0.00195713, 0.00145273, 0.00147452, 0.00262146,
       0.00112438, 0.00143771, 0.00177879, 0.00175562, 0.00147018,
       0.00140247, 0.00131922, 0.0021729 , 0.00165758, 0.00142598]), 'std_score_time': array([1.40229618e-03, 2.15776379e-03, 5.31459098e-04, 1.55974548e-03,
       3.88411804e-04, 1.96203890e-03, 1.30876899e-03, 3.97759323e-04,
       2.06006820e-04, 2.24821759e-03, 1.84653612e-05, 2.13555310e-04,
       7.97359924e-04, 8.95026402e-04, 2.88325123e-04, 2.35056566e-04,
       1.43112599e-04, 7.56064996e-04, 2.96814359e-04, 1.80565394e-04]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split1_test_score': array([1.        , 0.95833333, 0.91666667, 0.95833333, 1.        ,
       1.        , 0.95833333, 1.        , 0.95833333, 0.95833333,
       1.        , 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 1.        , 0.95833333, 0.95833333, 0.91666667]), 'split2_test_score': array([0.875     , 0.83333333, 0.875     , 0.83333333, 0.875     ,
       0.875     , 0.875     , 0.79166667, 0.875     , 0.875     ,
       0.875     , 0.875     , 0.875     , 0.875     , 0.83333333,
       0.83333333, 0.875     , 0.875     , 0.875     , 0.83333333]), 'split3_test_score': array([1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.95833333,
       1.        , 1.        , 1.        , 0.95833333, 0.95833333,
       0.95833333, 1.        , 1.        , 1.        , 0.95833333]), 'split4_test_score': array([0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'mean_test_score': array([0.95833333, 0.93333333, 0.93333333, 0.93333333, 0.95833333,
       0.95833333, 0.95      , 0.94166667, 0.95      , 0.94166667,
       0.95833333, 0.95      , 0.95      , 0.94166667, 0.93333333,
       0.93333333, 0.95833333, 0.95      , 0.95      , 0.925     ]), 'std_test_score': array([0.04564355, 0.05      , 0.03333333, 0.05      , 0.04564355,
       0.04564355, 0.04082483, 0.07728015, 0.04082483, 0.03333333,
       0.04564355, 0.04082483, 0.04082483, 0.03333333, 0.05      ,
       0.05      , 0.04564355, 0.04082483, 0.04082483, 0.04859127]), 'rank_test_score': array([ 1, 15, 15, 15,  1,  1,  6, 14,  6, 12,  1,  6,  6, 12, 15, 15,  1,
        6,  6, 20], dtype=int32)}