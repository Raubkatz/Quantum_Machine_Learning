Ridge_RandomizedSearchCV for the tae dataset with n_iter=20
CV-score:
-0.013576508628387395
test-score:
-0.0018915379615505046
runtime:
0:00:00.209600
best parameters:
{'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00118546, 0.00110903, 0.00110736, 0.00559478, 0.00084934,
       0.00081048, 0.00079861, 0.00104704, 0.00120125, 0.0010344 ,
       0.00103426, 0.00080714, 0.00093684, 0.00080705, 0.00129981,
       0.00114608, 0.00093641, 0.00110922, 0.00107803, 0.00120211]), 'std_fit_time': array([5.35786334e-05, 6.41523393e-05, 1.21266730e-05, 8.33127674e-03,
       7.84849338e-05, 7.38035485e-06, 8.89860417e-06, 2.92568256e-05,
       1.44243043e-05, 2.01553827e-05, 1.15005768e-05, 7.89392358e-06,
       1.68523562e-04, 3.56832255e-06, 2.49145129e-04, 2.92418225e-05,
       2.16683535e-05, 1.04823949e-05, 1.13749402e-05, 2.11735512e-04]), 'mean_score_time': array([0.00043697, 0.00041471, 0.00042262, 0.0008039 , 0.00040741,
       0.00040302, 0.00041142, 0.00042539, 0.00043278, 0.00040898,
       0.00040927, 0.00040479, 0.00050368, 0.00044065, 0.00042572,
       0.00045419, 0.00040712, 0.00043173, 0.00042086, 0.00043154]), 'std_score_time': array([3.49503747e-05, 8.32978696e-06, 9.08822102e-06, 6.28685199e-04,
       7.07167351e-06, 1.01824553e-06, 1.16338495e-05, 5.41246934e-06,
       1.07836910e-05, 1.62824355e-06, 1.11420836e-06, 9.58430826e-07,
       1.28672950e-04, 6.81697715e-05, 3.10752255e-05, 3.32936842e-05,
       1.06196677e-06, 9.77388234e-06, 7.74768677e-07, 2.19412462e-05]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([-2.11090186e-02, -2.08700175e-02, -2.09611559e-02, -1.46575514e-02,
       -3.20877442e-01, -4.41646518e-01, -3.23770228e-01, -3.22504423e-01,
       -2.23235001e-02, -3.23154534e-01,  3.66433189e-03, -2.40263421e+00,
       -3.23770228e-01, -3.20877442e-01, -2.14017323e-02,  3.60363645e-03,
        1.38952021e-03, -1.60942886e-03, -4.41619166e-01, -3.23150156e-01]), 'split1_test_score': array([ 3.83869935e-02,  3.78250627e-02,  3.78670140e-02,  3.12865461e-02,
        1.42495167e-02, -1.26988056e-01,  2.29487246e-02,  2.87087484e-02,
        3.87339676e-02,  2.20722827e-02, -3.83620480e-03, -2.25729390e+00,
        2.29487246e-02,  1.42495167e-02,  3.79237114e-02, -3.93334927e-03,
       -4.49583513e-04, -3.15711749e-02, -1.26932512e-01,  2.21303576e-02]), 'split2_test_score': array([ 1.05527345e-03,  4.61251303e-04,  5.17646461e-04, -3.27194765e-03,
       -5.48924319e-01, -9.20931350e-01, -5.13455502e-01, -5.16105439e-01,
        1.04025194e-03, -5.16855714e-01, -3.41322632e-02, -3.73322248e+00,
       -5.13455502e-01, -5.48924319e-01,  6.09531292e-04, -3.41775240e-02,
       -2.84210010e-02, -6.01565094e-02, -9.20947611e-01, -5.16885899e-01]), 'split3_test_score': array([-0.14376627, -0.14263082, -0.1429465 , -0.12293771, -0.80241295,
       -0.83518698, -0.82942492, -0.83198565, -0.14632193, -0.82620828,
       -0.04170439, -3.09080972, -0.82942492, -0.80241295, -0.14361847,
       -0.04163839, -0.05172725, -0.00884243, -0.83520036, -0.82619716]), 'split4_test_score': array([ 3.24966000e-03,  3.86154029e-03,  4.16953031e-03,  3.27390878e-03,
       -3.49832020e-01, -3.52145291e-01, -3.78808227e-01, -3.75697718e-01,
        3.20041121e-03, -3.75461786e-01,  8.12598719e-03, -2.82767407e+00,
       -3.78808227e-01, -3.49832020e-01,  3.22889804e-03,  7.89273475e-03,
        1.04753201e-03, -2.06614884e-03, -3.52253652e-01, -3.75476540e-01]), 'mean_test_score': array([-0.02443667, -0.0242706 , -0.02427069, -0.02126135, -0.40155944,
       -0.53537964, -0.40450203, -0.4035169 , -0.02513416, -0.40392161,
       -0.01357651, -2.86232688, -0.40450203, -0.40155944, -0.02465161,
       -0.01365058, -0.01563216, -0.02084914, -0.53539066, -0.40391588]), 'std_test_score': array([0.06263196, 0.06209615, 0.06225641, 0.05304446, 0.26999346,
       0.29922532, 0.27652207, 0.27943428, 0.06365762, 0.27563897,
       0.02038056, 0.52711415, 0.27652207, 0.26999346, 0.06244165,
       0.02030231, 0.02128319, 0.02248181, 0.2992358 , 0.27565594]), 'rank_test_score': array([ 8,  6,  7,  5, 11, 18, 16, 13, 10, 15,  1, 20, 16, 12,  9,  2,  3,
        4, 19, 14], dtype=int32)}