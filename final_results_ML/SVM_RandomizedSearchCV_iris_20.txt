SVM_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9583333333333334
test-score:
1.0
runtime:
0:00:00.143353
best parameters:
{'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.0007535 , 0.00089493, 0.00098448, 0.00056262, 0.00057416,
       0.0005053 , 0.00057783, 0.00067024, 0.00076094, 0.00090022,
       0.00056334, 0.00068159, 0.0006012 , 0.00068607, 0.00088606,
       0.00090199, 0.00065246, 0.00049357, 0.00056152, 0.00065689]), 'std_fit_time': array([2.69930798e-04, 1.67189743e-05, 4.39514547e-05, 3.81032574e-05,
       3.84575598e-05, 2.80891491e-05, 4.46912685e-05, 6.83231942e-05,
       7.61701056e-05, 2.45519744e-05, 2.71334170e-05, 1.93917426e-05,
       3.82542889e-05, 1.64930522e-05, 2.32951423e-05, 4.14838462e-05,
       5.20299047e-06, 1.27150218e-05, 3.28344541e-05, 1.04984340e-05]), 'mean_score_time': array([0.00026221, 0.0002944 , 0.00030127, 0.0002368 , 0.00022731,
       0.0002202 , 0.00022101, 0.00022259, 0.00023866, 0.00028968,
       0.00022798, 0.00024414, 0.00024714, 0.00026655, 0.00028629,
       0.00029345, 0.00024233, 0.00022745, 0.00022693, 0.0002234 ]), 'std_score_time': array([4.64164664e-05, 6.86115484e-06, 2.21350048e-05, 2.26060043e-05,
       4.14491917e-06, 1.00701867e-06, 1.48510089e-06, 1.23977661e-06,
       2.07421423e-05, 4.53120766e-06, 8.09135193e-06, 2.51166929e-05,
       3.02341081e-05, 2.15454426e-05, 3.51503706e-06, 9.77969646e-06,
       1.82745003e-05, 1.64664237e-05, 1.24639797e-05, 1.00022206e-06]), 'param_verbose': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.0001, 0.01, 0.01, 0.0001, 0.001, 0.001, 0.01, 0.001,
                   0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001, 0.001,
                   0.01, 0.0001, 0.0001, 0.01],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_shrinking': masked_array(data=[False, True, True, True, False, True, True, False,
                   False, False, False, True, False, True, False, True,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_probability': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[300, 400, 300, 400, 400, 200, 200, 400, 200, 200, 200,
                   300, 300, 400, 200, 200, 300, 400, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['poly', 'sigmoid', 'sigmoid', 'linear', 'rbf',
                   'linear', 'linear', 'poly', 'poly', 'sigmoid', 'rbf',
                   'rbf', 'poly', 'rbf', 'sigmoid', 'sigmoid', 'linear',
                   'linear', 'linear', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=['auto', 'auto', 'scale', 'scale', 'scale', 'auto',
                   'scale', 'auto', 'scale', 'auto', 'scale', 'auto',
                   'auto', 'scale', 'auto', 'auto', 'scale', 'auto',
                   'scale', 'scale'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 4, 3, 4, 2, 3, 2, 2, 3, 2, 2, 2, 4, 4, 3, 2, 4, 4,
                   4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_decision_function_shape': masked_array(data=['ovr', 'ovo', 'ovr', 'ovo', 'ovr', 'ovr', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovo', 'ovo', 'ovo', 'ovo', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovr', 'ovo'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_coef0': masked_array(data=[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0,
                   0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 1.0, 2.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_class_weight': masked_array(data=[None, None, None, None, None, None, None, 'balanced',
                   'balanced', None, None, 'balanced', None, None, None,
                   None, 'balanced', None, None, 'balanced'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_cache_size': masked_array(data=[200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200, 200, 200, 200, 200, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_break_ties': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[100, 0.1, 1, 10, 10, 1, 100, 0.1, 10, 10, 100, 1, 0.1,
                   0.1, 0.1, 1, 0.1, 1, 100, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'sigmoid', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'poly', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'poly', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'rbf', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 100}], 'split0_test_score': array([0.95833333, 0.04166667, 0.125     , 1.        , 1.        ,
       1.        , 0.95833333, 1.        , 0.95833333, 0.29166667,
       0.95833333, 1.        , 0.95833333, 0.95833333, 0.29166667,
       0.04166667, 1.        , 1.        , 0.95833333, 0.95833333]), 'split1_test_score': array([0.875     , 0.33333333, 0.33333333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 1.        , 0.95833333, 0.33333333,
       0.95833333, 0.95833333, 1.        , 0.75      , 0.33333333,
       0.33333333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split2_test_score': array([0.83333333, 0.33333333, 0.33333333, 0.83333333, 0.83333333,
       0.875     , 0.83333333, 0.83333333, 0.83333333, 0.33333333,
       0.83333333, 0.83333333, 0.83333333, 0.91666667, 0.33333333,
       0.33333333, 0.83333333, 0.875     , 0.83333333, 0.83333333]), 'split3_test_score': array([0.83333333, 0.33333333, 0.33333333, 0.95833333, 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.33333333,
       0.95833333, 1.        , 1.        , 0.95833333, 0.33333333,
       0.33333333, 1.        , 1.        , 1.        , 1.        ]), 'split4_test_score': array([0.91666667, 0.33333333, 0.33333333, 1.        , 0.95833333,
       0.95833333, 1.        , 0.95833333, 1.        , 0.33333333,
       1.        , 0.95833333, 1.        , 0.875     , 0.33333333,
       0.33333333, 0.95833333, 0.95833333, 1.        , 1.        ]), 'mean_test_score': array([0.88333333, 0.275     , 0.29166667, 0.95      , 0.95      ,
       0.95833333, 0.95      , 0.95833333, 0.95      , 0.325     ,
       0.94166667, 0.95      , 0.95833333, 0.89166667, 0.325     ,
       0.275     , 0.95      , 0.95833333, 0.95      , 0.95      ]), 'std_test_score': array([0.04859127, 0.11666667, 0.08333333, 0.06123724, 0.06123724,
       0.04564355, 0.06123724, 0.06454972, 0.06123724, 0.01666667,
       0.05651942, 0.06123724, 0.06454972, 0.07728015, 0.01666667,
       0.11666667, 0.06123724, 0.04564355, 0.06123724, 0.06123724]), 'rank_test_score': array([15, 19, 18,  5,  5,  1,  5,  1,  5, 16, 13,  5,  1, 14, 16, 19,  5,
        1,  5,  5], dtype=int32)}