LightGBM_RandomizedSearchCV for the wine dataset with n_iter=20
CV-score:
0.9859605911330049
test-score:
1.0
runtime:
0:00:33.493634
best parameters:
{'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.34183464, 0.5423595 , 0.4276638 , 0.25174479, 0.28565607,
       0.14127049, 0.39199071, 0.96595802, 0.35954218, 0.18096981,
       0.07103577, 0.33604312, 0.23177691, 0.24869947, 0.39518332,
       0.21701789, 0.10224705, 0.26747842, 0.4464716 , 0.36493545]), 'std_fit_time': array([0.20192349, 0.13327663, 0.20552133, 0.08474938, 0.0679461 ,
       0.03832275, 0.22370951, 0.69965998, 0.12226961, 0.06932115,
       0.02675162, 0.0823545 , 0.03930706, 0.05751155, 0.16206964,
       0.07116625, 0.0083136 , 0.05905411, 0.15941781, 0.19427509]), 'mean_score_time': array([0.0013783 , 0.00292687, 0.00223732, 0.00416036, 0.00241523,
       0.00152507, 0.00099955, 0.00838876, 0.00261593, 0.00395789,
       0.00106344, 0.00163708, 0.00097923, 0.00193419, 0.00290613,
       0.00246735, 0.00495191, 0.00228643, 0.00387812, 0.00692105]), 'std_score_time': array([5.21268384e-04, 1.77295400e-03, 2.60653509e-03, 5.60144299e-03,
       1.35958489e-03, 5.80512974e-04, 4.26961280e-05, 6.70270729e-03,
       1.44667154e-03, 5.91652357e-03, 3.94991841e-04, 8.94116039e-04,
       4.03820549e-05, 7.97827549e-04, 2.41647295e-03, 1.63787934e-03,
       5.55175975e-03, 1.14321977e-03, 3.17398704e-03, 6.46395986e-03]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       0.93103448, 1.        , 0.96551724, 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ]), 'split1_test_score': array([0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       0.96551724, 0.96551724, 0.96551724, 0.96551724, 0.96551724,
       1.        , 0.96551724, 0.96551724, 0.96551724, 0.96551724]), 'split2_test_score': array([0.96428571, 0.96428571, 1.        , 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 1.        ,
       0.96428571, 0.96428571, 0.96428571, 1.        , 0.96428571,
       0.96428571, 1.        , 0.96428571, 0.96428571, 1.        ]), 'split3_test_score': array([0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.92857143, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 0.96428571, 0.96428571, 0.96428571, 0.96428571]), 'split4_test_score': array([1.        , 1.        , 1.        , 0.96428571, 0.96428571,
       1.        , 0.96428571, 1.        , 1.        , 1.        ,
       1.        , 0.96428571, 1.        , 1.        , 0.96428571,
       1.        , 1.        , 1.        , 0.96428571, 0.96428571]), 'mean_test_score': array([0.97881773, 0.97881773, 0.98596059, 0.97167488, 0.97167488,
       0.95788177, 0.97167488, 0.97192118, 0.97881773, 0.98596059,
       0.97881773, 0.97167488, 0.97881773, 0.98596059, 0.97167488,
       0.98571429, 0.98596059, 0.97881773, 0.97167488, 0.97881773]), 'std_test_score': array([0.01730109, 0.01730109, 0.0171991 , 0.01417059, 0.01417059,
       0.02627976, 0.01417059, 0.01405021, 0.01730109, 0.0171991 ,
       0.01730109, 0.01417059, 0.01730109, 0.0171991 , 0.01417059,
       0.01749636, 0.0171991 , 0.01730109, 0.01417059, 0.01730109]), 'rank_test_score': array([ 6,  6,  1, 14, 14, 20, 14, 13,  6,  1,  6, 14,  6,  1, 14,  5,  1,
        6, 14,  6], dtype=int32)}