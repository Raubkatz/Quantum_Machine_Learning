Ridge_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.08008113863658377
test-score:
0.114859696383395
runtime:
0:00:00.456209
best parameters:
{'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00350652, 0.01481037, 0.00290346, 0.00182467, 0.00140576,
       0.0013504 , 0.00140171, 0.00334587, 0.00533824, 0.00258274,
       0.00240788, 0.00110159, 0.00190597, 0.00128083, 0.00191922,
       0.00227242, 0.00122981, 0.00298982, 0.00319791, 0.00822024]), 'std_fit_time': array([1.40441180e-04, 2.48108385e-02, 1.63728619e-04, 3.21643767e-04,
       1.50727117e-04, 2.58496762e-05, 1.60810813e-05, 6.28187191e-04,
       2.57070435e-03, 1.13924610e-04, 4.32963692e-04, 6.39439518e-05,
       4.19264488e-04, 3.29286024e-04, 5.05410126e-04, 1.39164530e-04,
       1.48188945e-04, 3.75518675e-04, 4.90859793e-05, 3.70668013e-03]), 'mean_score_time': array([0.0005424 , 0.00071898, 0.00065365, 0.00066099, 0.00064306,
       0.00063872, 0.0006516 , 0.00067859, 0.00081048, 0.00075788,
       0.00067959, 0.00056691, 0.00074439, 0.00055466, 0.00047145,
       0.00049505, 0.00044422, 0.00073376, 0.00071297, 0.00098805]), 'std_score_time': array([8.31229887e-05, 9.88221974e-05, 5.71528671e-06, 2.15737067e-05,
       1.61952039e-05, 9.42643264e-06, 7.16367493e-06, 2.32163389e-05,
       1.17819949e-04, 3.85753304e-05, 9.39654292e-05, 6.60142083e-05,
       7.98860079e-05, 1.23097394e-04, 3.92230375e-05, 9.43208247e-05,
       1.08100151e-05, 1.10854128e-05, 4.53956989e-05, 1.62604016e-04]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.07963996,  0.0779958 ,  0.07833811,  0.08309096, -0.57885984,
       -0.59786176, -0.56200768, -0.56981534,  0.07600144, -0.56524884,
        0.06696062, -0.99442056, -0.56200768, -0.57885984,  0.07772467,
        0.06675456,  0.08089106,  0.01597439, -0.59786132, -0.56562314]), 'split1_test_score': array([ 0.08143549,  0.0807948 ,  0.08068956,  0.08193054, -0.24229227,
       -0.26234461, -0.22508238, -0.23125659,  0.0806932 , -0.22851065,
        0.0672371 , -0.66007635, -0.22508238, -0.24229227,  0.08107944,
        0.06728282,  0.07521199,  0.01871853, -0.2623448 , -0.22854283]), 'split2_test_score': array([ 0.10224838,  0.10162623,  0.10099116,  0.10323932, -0.11633487,
       -0.15957604, -0.17529238, -0.14724107,  0.0982595 , -0.15658373,
        0.06690751, -0.76611475, -0.17529238, -0.11633487,  0.10086795,
        0.06679449,  0.0836379 , -0.00107531, -0.1595681 , -0.15662271]), 'split3_test_score': array([ 0.02292363,  0.02484593,  0.02411553,  0.02897892, -0.22114834,
       -0.2092962 , -0.27018382, -0.24948225,  0.02071932, -0.25517714,
        0.03181307, -0.6165867 , -0.27018382, -0.22114834,  0.02289961,
        0.03219681,  0.04240464,  0.01060198, -0.20929364, -0.25531939]), 'split4_test_score': array([ 0.09564379,  0.10779992,  0.10952076,  0.10316594, -0.33111194,
       -0.32520777, -0.61277349, -0.3462948 ,  0.01779225, -0.368646  ,
        0.10877529, -0.64799815, -0.61277349, -0.33111194,  0.07039122,
        0.10872422,  0.10356705,  0.02800661, -0.3252107 , -0.3683992 ]), 'mean_test_score': array([ 0.07637825,  0.07861254,  0.07873102,  0.08008114, -0.29794945,
       -0.31085728, -0.36906795, -0.30881801,  0.05869314, -0.31483327,
        0.06833872, -0.7370393 , -0.36906795, -0.29794945,  0.07059258,
        0.06835058,  0.07714253,  0.01444524, -0.31085571, -0.31490145]), 'std_test_score': array([0.02805008, 0.02924901, 0.02976698, 0.02717766, 0.15619884,
       0.15370859, 0.18148114, 0.14502947, 0.03305744, 0.14258831,
       0.02439017, 0.13816725, 0.18148114, 0.15619884, 0.02589247,
       0.02426205, 0.01982395, 0.00959342, 0.15371037, 0.14267681]), 'rank_test_score': array([ 5,  3,  2,  1, 11, 15, 18, 13,  9, 16,  8, 20, 18, 12,  6,  7,  4,
       10, 14, 17], dtype=int32)}