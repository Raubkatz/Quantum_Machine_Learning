XGBoost_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9583333333333334
test-score:
1.0
runtime:
0:00:21.466262
best parameters:
{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.17305713, 0.25817246, 0.13593588, 0.18768506, 0.15042057,
       0.12727337, 0.18751531, 0.16999626, 0.29121599, 0.09931254,
       0.09435215, 0.12777038, 0.15625362, 0.14629049, 0.45012026,
       0.41243067, 0.18682036, 0.21966939, 0.17109823, 0.3859591 ]), 'std_fit_time': array([0.06147823, 0.03649292, 0.01602295, 0.06120497, 0.02997113,
       0.03429673, 0.03844881, 0.03567604, 0.03006017, 0.02389393,
       0.01893372, 0.02937464, 0.01774538, 0.02845299, 0.25720176,
       0.17832293, 0.13534089, 0.0537715 , 0.05191926, 0.20405529]), 'mean_score_time': array([0.00238743, 0.00323319, 0.00395961, 0.00288   , 0.00216231,
       0.00307465, 0.00523081, 0.00343094, 0.0046443 , 0.00159793,
       0.00482903, 0.00428648, 0.00185018, 0.00830851, 0.00488262,
       0.00366344, 0.00431132, 0.00524454, 0.0048799 , 0.00521402]), 'std_score_time': array([9.75639957e-04, 1.95169398e-03, 3.28935937e-03, 1.12698299e-03,
       1.16901483e-03, 2.43804369e-03, 6.30941213e-03, 3.27541778e-03,
       2.60544465e-03, 7.33570847e-05, 2.48028075e-03, 1.92928622e-03,
       6.09062805e-04, 6.20159952e-03, 4.43505394e-03, 2.60968499e-03,
       2.84039389e-03, 6.00006449e-03, 3.68222276e-03, 3.87672917e-03]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split1_test_score': array([1.        , 0.95833333, 0.91666667, 0.95833333, 1.        ,
       1.        , 0.95833333, 1.        , 0.95833333, 0.95833333,
       1.        , 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 1.        , 0.95833333, 0.95833333, 0.91666667]), 'split2_test_score': array([0.875     , 0.83333333, 0.875     , 0.83333333, 0.875     ,
       0.875     , 0.875     , 0.79166667, 0.875     , 0.875     ,
       0.875     , 0.875     , 0.875     , 0.875     , 0.83333333,
       0.83333333, 0.875     , 0.875     , 0.875     , 0.83333333]), 'split3_test_score': array([1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.95833333,
       1.        , 1.        , 1.        , 0.95833333, 0.95833333,
       0.95833333, 1.        , 1.        , 1.        , 0.95833333]), 'split4_test_score': array([0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'mean_test_score': array([0.95833333, 0.93333333, 0.93333333, 0.93333333, 0.95833333,
       0.95833333, 0.95      , 0.94166667, 0.95      , 0.94166667,
       0.95833333, 0.95      , 0.95      , 0.94166667, 0.93333333,
       0.93333333, 0.95833333, 0.95      , 0.95      , 0.925     ]), 'std_test_score': array([0.04564355, 0.05      , 0.03333333, 0.05      , 0.04564355,
       0.04564355, 0.04082483, 0.07728015, 0.04082483, 0.03333333,
       0.04564355, 0.04082483, 0.04082483, 0.03333333, 0.05      ,
       0.05      , 0.04564355, 0.04082483, 0.04082483, 0.04859127]), 'rank_test_score': array([ 1, 15, 15, 15,  1,  1,  6, 14,  6, 12,  1,  6,  6, 12, 15, 15,  1,
        6,  6, 20], dtype=int32)}