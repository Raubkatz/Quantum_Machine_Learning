Lasso_RandomizedSearchCV for the phoneme dataset with n_iter=20
CV-score:
0.2374100028347257
test-score:
0.25443182518893115
runtime:
0:00:00.421796
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.01480775, 0.00302453, 0.00293007, 0.00316415, 0.00157099,
       0.0020031 , 0.00148439, 0.00171342, 0.00194879, 0.00247664,
       0.00291872, 0.00348744, 0.00247226, 0.00239563, 0.00179596,
       0.00170345, 0.00169411, 0.00147901, 0.00167036, 0.00174842]), 'std_fit_time': array([2.39863044e-02, 7.52977662e-05, 1.02200298e-04, 1.59352714e-04,
       5.42074723e-05, 4.32659414e-04, 4.25802500e-05, 2.20192206e-04,
       3.94659810e-04, 5.40888863e-04, 5.32096237e-04, 8.21743183e-04,
       7.52487481e-04, 4.66595600e-04, 2.34786376e-04, 3.65897258e-05,
       3.77712823e-05, 2.35016390e-05, 2.45962017e-05, 2.67784021e-04]), 'mean_score_time': array([0.00095282, 0.00094352, 0.00092816, 0.00088124, 0.00058961,
       0.00060391, 0.00051489, 0.0005353 , 0.00068331, 0.00093727,
       0.0009829 , 0.00122771, 0.00080252, 0.00069308, 0.0005754 ,
       0.00052428, 0.00053816, 0.00052218, 0.00052485, 0.00054588]), 'std_score_time': array([1.22963314e-04, 3.42781249e-05, 4.35913670e-05, 7.08404791e-05,
       9.50397584e-05, 1.42597433e-04, 3.06291329e-06, 2.21795411e-05,
       1.22154661e-04, 2.21607493e-04, 9.03580119e-05, 2.14593601e-04,
       2.92814669e-04, 1.34214372e-04, 2.10639003e-05, 1.31636423e-05,
       1.96474269e-05, 1.25512381e-05, 1.79157563e-05, 3.94936904e-05]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 2.41175028e-01, -2.07462394e-04, -2.07462394e-04, -2.07462394e-04,
       -8.08601626e+00, -2.07462394e-04, -8.08601626e+00, -8.08601626e+00,
        1.99252362e-01, -2.07462394e-04, -8.08601626e+00, -8.08601626e+00,
       -8.08601626e+00, -9.63314487e-02, -9.69941666e-02, -2.07462394e-04,
        1.75777283e-01,  1.93906736e-01,  1.61622828e-01, -2.07462394e-04]), 'split1_test_score': array([ 2.08310983e-01, -4.45586947e-03, -4.45586947e-03, -4.45586947e-03,
       -8.17994094e+00, -4.45586947e-03, -8.17994094e+00, -8.17994094e+00,
        1.76252120e-01, -4.45586947e-03, -8.17994094e+00, -8.17994094e+00,
       -8.17994094e+00, -5.48136351e-02, -5.55623572e-02, -4.45586947e-03,
        1.81040537e-01,  1.76415220e-01,  1.68386948e-01, -4.45586947e-03]), 'split2_test_score': array([ 2.17564693e-01, -5.72958603e-03, -5.72958603e-03, -5.72958603e-03,
       -8.00479528e+00, -5.72958603e-03, -8.00479528e+00, -8.00479528e+00,
        1.70060022e-01, -5.72958603e-03, -8.00479528e+00, -8.00479528e+00,
       -8.00479528e+00, -1.83683763e-01, -1.84441949e-01, -5.72958603e-03,
        1.48429372e-01,  1.59055329e-01,  1.32718155e-01, -5.72958603e-03]), 'split3_test_score': array([ 2.42176400e-01, -1.07915366e-03, -1.07915366e-03, -1.07915366e-03,
       -8.11517715e+00, -1.07915366e-03, -8.11517715e+00, -8.11517715e+00,
        1.62581177e-01, -1.07915366e-03, -8.11517715e+00, -8.11517715e+00,
       -8.11517715e+00, -1.23277591e-01, -1.24065655e-01, -1.07915366e-03,
        1.91525507e-01,  1.60878624e-01,  1.71782070e-01, -1.07915366e-03]), 'split4_test_score': array([ 2.77822911e-01, -1.14276168e-03, -1.14276168e-03, -1.14276168e-03,
       -8.02999339e+00, -1.14276168e-03, -8.02999339e+00, -8.02999339e+00,
        2.14852049e-01, -1.14276168e-03, -8.02999339e+00, -8.02999339e+00,
       -8.02999339e+00, -8.48893491e-02, -8.51584698e-02, -1.14276168e-03,
        1.96388104e-01,  2.10572925e-01,  1.76797415e-01, -1.14276168e-03]), 'mean_test_score': array([ 2.37410003e-01, -2.52296665e-03, -2.52296665e-03, -2.52296665e-03,
       -8.08318461e+00, -2.52296665e-03, -8.08318461e+00, -8.08318461e+00,
        1.84599546e-01, -2.52296665e-03, -8.08318461e+00, -8.08318461e+00,
       -8.08318461e+00, -1.08599157e-01, -1.09244520e-01, -2.52296665e-03,
        1.78632161e-01,  1.80165767e-01,  1.62261483e-01, -2.52296665e-03]), 'std_test_score': array([0.02412752, 0.00216193, 0.00216193, 0.00216193, 0.06223748,
       0.00216193, 0.06223748, 0.06223748, 0.01947206, 0.00216193,
       0.06223748, 0.06223748, 0.06223748, 0.04349411, 0.04355756,
       0.00216193, 0.01677898, 0.01972369, 0.01557352, 0.00216193]), 'rank_test_score': array([ 1,  6,  6,  6, 15,  6, 15, 15,  2,  6, 15, 15, 15, 13, 14,  6,  4,
        3,  5,  6], dtype=int32)}