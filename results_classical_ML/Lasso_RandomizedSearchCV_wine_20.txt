Lasso_RandomizedSearchCV for the wine dataset with n_iter=20
CV-score:
0.8700141665779718
test-score:
0.8826666473863382
runtime:
0:00:00.188776
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00070815, 0.00072589, 0.00071082, 0.00996928, 0.00060987,
       0.00068741, 0.00055122, 0.00059862, 0.00098872, 0.0006218 ,
       0.00058012, 0.00057383, 0.00055423, 0.00087004, 0.00058231,
       0.00067825, 0.00070801, 0.0005815 , 0.00069909, 0.00060492]), 'std_fit_time': array([1.13168477e-04, 4.57814830e-05, 1.08427779e-05, 1.83653002e-02,
       1.70111280e-05, 1.06318648e-05, 6.87704330e-06, 2.17373947e-05,
       1.51750607e-04, 1.09827927e-05, 1.58776034e-05, 3.93325627e-06,
       2.63600826e-06, 1.37494570e-05, 2.77167520e-05, 1.80628786e-05,
       9.34965685e-06, 1.24836660e-05, 1.47012848e-05, 8.41911335e-06]), 'mean_score_time': array([0.0003366 , 0.00032353, 0.00032153, 0.00036569, 0.00031953,
       0.0003201 , 0.00030866, 0.00031414, 0.00032301, 0.00031848,
       0.00031495, 0.00030918, 0.000314  , 0.00032005, 0.00030999,
       0.00031447, 0.00031128, 0.00031147, 0.00031185, 0.00030942]), 'std_score_time': array([3.50867266e-05, 1.52297041e-05, 9.65827749e-06, 6.24147601e-05,
       5.18504227e-06, 1.54590871e-05, 1.25798282e-06, 7.13441455e-06,
       1.62764297e-05, 1.11598233e-05, 9.77458022e-06, 4.86280395e-07,
       7.64576824e-06, 1.58246729e-05, 1.21943587e-06, 5.66614181e-06,
       1.23057250e-06, 1.09361123e-06, 1.55977509e-06, 1.05982355e-06]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.91855164, -0.01311118, -0.01311118, -0.01311118,  0.4020129 ,
       -0.01311118, -0.24037661, -0.8964478 ,  0.88057929, -0.01311118,
        0.14845842, -0.24037661, -0.8964478 ,  0.85385926,  0.27497858,
       -0.01311118,  0.91501748,  0.29994102,  0.45125044,  0.89701251]), 'split1_test_score': array([ 0.82820611, -0.12713804, -0.12713804, -0.12713804,  0.12099316,
       -0.12713804, -0.26320868, -0.55636853,  0.74677471, -0.12713804,
        0.03255009, -0.26320868, -0.55636853,  0.68054575,  0.07395931,
       -0.12713804,  0.82523799,  0.07580126,  0.21997408,  0.74497262]), 'split2_test_score': array([ 0.91706141, -0.01288234, -0.01288234, -0.01288234,  0.44998786,
       -0.01288234, -0.24058543, -0.90666665,  0.90614957, -0.01288234,
        0.13971252, -0.24058543, -0.90666665,  0.87250827,  0.24248794,
       -0.01288234,  0.90485527,  0.31536478,  0.48804114,  0.85475432]), 'split3_test_score': array([ 0.87593924, -0.02766636, -0.02766636, -0.02766636,  0.36000031,
       -0.02766636, -0.22029333, -0.84527427,  0.85278087, -0.02766636,
        0.13524191, -0.22029333, -0.84527427,  0.77494157,  0.24144927,
       -0.02766636,  0.87461715,  0.25779732,  0.41405517,  0.81987972]), 'split4_test_score': array([ 0.81031243, -0.00359362, -0.00359362, -0.00359362,  0.49729197,
       -0.00359362, -0.12290828, -0.71895723,  0.7657654 , -0.00359362,
        0.26666499, -0.12290828, -0.71895723,  0.82918312,  0.27606675,
       -0.00359362,  0.82413617,  0.25407915,  0.47070926,  0.8332318 ]), 'mean_test_score': array([ 0.87001417, -0.03687831, -0.03687831, -0.03687831,  0.36605724,
       -0.03687831, -0.21747447, -0.7847429 ,  0.83040997, -0.03687831,
        0.14452559, -0.21747447, -0.7847429 ,  0.80220759,  0.22178837,
       -0.03687831,  0.86877281,  0.24059671,  0.40880602,  0.82997019]), 'std_test_score': array([0.04453459, 0.0457826 , 0.0457826 , 0.0457826 , 0.13088377,
       0.0457826 , 0.04919543, 0.13228003, 0.06313111, 0.0457826 ,
       0.07427162, 0.04919543, 0.13228003, 0.06911266, 0.07542386,
       0.0457826 , 0.03837286, 0.08572886, 0.0975672 , 0.04989182]), 'rank_test_score': array([ 1, 11, 11, 11,  7, 11, 17, 19,  3, 11, 10, 18, 19,  5,  9, 11,  2,
        8,  6,  4], dtype=int32)}