MLP_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.7081217112788837
test-score:
0.7521367521367521
runtime:
0:00:42.413377
best parameters:
{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.35918465, 0.28030839, 0.06489973, 0.06026831, 0.55979447,
       0.66678762, 0.17446799, 0.75155272, 0.85161467, 0.34453654,
       0.17287407, 0.44499307, 0.68152823, 0.54585853, 0.48843145,
       0.61498365, 0.68491321, 0.39166131, 0.03859215, 0.1373188 ]), 'std_fit_time': array([0.02891213, 0.0163562 , 0.01885284, 0.02630902, 0.06025866,
       0.32264133, 0.03512826, 0.14169971, 0.13972781, 0.04243061,
       0.02496355, 0.04741921, 0.16585682, 0.078453  , 0.01163927,
       0.07780359, 0.04097799, 0.02764522, 0.01686763, 0.06149038]), 'mean_score_time': array([0.00123677, 0.00116835, 0.00128164, 0.0012064 , 0.00138497,
       0.00125995, 0.00114264, 0.00153494, 0.00157061, 0.00096898,
       0.00089569, 0.00113912, 0.00118051, 0.00113859, 0.00133243,
       0.0013063 , 0.00131569, 0.00086656, 0.0011878 , 0.00113688]), 'std_score_time': array([7.39120052e-05, 2.12739208e-04, 8.39771835e-05, 4.41256048e-05,
       7.74394409e-05, 1.88764444e-04, 1.64863136e-04, 8.46539739e-05,
       8.79330386e-05, 1.32322646e-04, 1.09071890e-04, 2.32833847e-04,
       1.76664312e-04, 6.82657969e-05, 5.67980113e-05, 2.47262022e-05,
       3.48611991e-05, 1.89540137e-04, 2.14423655e-04, 4.21952660e-05]), 'param_solver': masked_array(data=['adam', 'adam', 'sgd', 'sgd', 'adam', 'adam', 'sgd',
                   'adam', 'adam', 'adam', 'sgd', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'sgd', 'sgd'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[200, 200, 400, 300, 200, 200, 300, 400, 300, 200, 400,
                   300, 400, 400, 200, 300, 300, 300, 200, 400],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['invscaling', 'constant', 'invscaling', 'invscaling',
                   'constant', 'constant', 'constant', 'adaptive',
                   'adaptive', 'constant', 'adaptive', 'constant',
                   'invscaling', 'adaptive', 'invscaling', 'adaptive',
                   'invscaling', 'invscaling', 'invscaling', 'constant'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100,), (50,), (100,), (50,), (100,), (100,), (50,),
                   (100,), (150,), (150,), (50,), (50,), (50,), (50,),
                   (100,), (100,), (100,), (50,), (100,), (50,)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001,
                   0.001, 0.01, 0.0001, 0.0001, 0.001, 0.01, 0.0001, 0.01,
                   0.01, 0.01, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'tanh', 'relu', 'tanh',
                   'tanh', 'tanh', 'relu', 'tanh', 'tanh', 'tanh', 'relu',
                   'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (150,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (150,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}], 'split0_test_score': array([0.72340426, 0.70212766, 0.29787234, 0.37234043, 0.72340426,
       0.72340426, 0.70212766, 0.71276596, 0.72340426, 0.71276596,
       0.70212766, 0.72340426, 0.72340426, 0.71276596, 0.72340426,
       0.72340426, 0.72340426, 0.72340426, 0.70212766, 0.70212766]), 'split1_test_score': array([0.67741935, 0.69892473, 0.29032258, 0.70967742, 0.67741935,
       0.67741935, 0.70967742, 0.67741935, 0.67741935, 0.67741935,
       0.70967742, 0.67741935, 0.67741935, 0.68817204, 0.67741935,
       0.67741935, 0.67741935, 0.67741935, 0.70967742, 0.70967742]), 'split2_test_score': array([0.70967742, 0.72043011, 0.43010753, 0.70967742, 0.69892473,
       0.70967742, 0.70967742, 0.69892473, 0.70967742, 0.69892473,
       0.70967742, 0.68817204, 0.70967742, 0.70967742, 0.68817204,
       0.70967742, 0.70967742, 0.70967742, 0.31182796, 0.70967742]), 'split3_test_score': array([0.72043011, 0.70967742, 0.70967742, 0.29032258, 0.74193548,
       0.70967742, 0.70967742, 0.72043011, 0.72043011, 0.72043011,
       0.70967742, 0.74193548, 0.72043011, 0.69892473, 0.72043011,
       0.72043011, 0.72043011, 0.69892473, 0.29032258, 0.70967742]), 'split4_test_score': array([0.69892473, 0.69892473, 0.30107527, 0.30107527, 0.69892473,
       0.69892473, 0.69892473, 0.70967742, 0.69892473, 0.69892473,
       0.69892473, 0.69892473, 0.69892473, 0.69892473, 0.69892473,
       0.69892473, 0.70967742, 0.68817204, 0.62365591, 0.69892473]), 'mean_test_score': array([0.70597117, 0.70601693, 0.40581103, 0.47661862, 0.70812171,
       0.70382064, 0.70601693, 0.70384351, 0.70597117, 0.70169298,
       0.70601693, 0.70597117, 0.70597117, 0.70169298, 0.7016701 ,
       0.70597117, 0.70812171, 0.69951956, 0.52752231, 0.70601693]), 'std_test_score': array([0.01668273, 0.00820809, 0.16055094, 0.19236862, 0.02231023,
       0.01531744, 0.00459616, 0.01490765, 0.01668273, 0.01468486,
       0.00459616, 0.02357546, 0.01668273, 0.00876931, 0.01790053,
       0.01668273, 0.016325  , 0.01606985, 0.18745503, 0.00459616]), 'rank_test_score': array([ 7,  3, 20, 19,  1, 13,  3, 12,  7, 14,  3,  7,  7, 14, 16,  7,  1,
       17, 18,  3], dtype=int32)}