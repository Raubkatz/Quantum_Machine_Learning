SVM_RandomizedSearchCV for the wine dataset with n_iter=20
CV-score:
0.7588669950738917
test-score:
0.9722222222222222
runtime:
0:00:00.193336
best parameters:
{'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00120511, 0.00086145, 0.00135412, 0.00111408, 0.00080791,
       0.00083218, 0.00091505, 0.00167046, 0.00140233, 0.00083895,
       0.00116544, 0.00152135, 0.00101104, 0.00098948, 0.0008481 ,
       0.00080943, 0.00118337, 0.00104809, 0.00090575, 0.00103774]), 'std_fit_time': array([1.61195406e-04, 4.34653221e-05, 7.56187062e-05, 5.85721036e-05,
       2.42365591e-05, 4.72115986e-05, 1.52993111e-04, 3.28361181e-04,
       2.87183087e-04, 2.06979187e-05, 1.41439370e-04, 4.61456681e-05,
       9.95777794e-05, 8.17104682e-06, 9.59991039e-05, 2.64852889e-05,
       3.50618333e-05, 7.31199892e-05, 2.79188054e-05, 3.37648523e-05]), 'mean_score_time': array([0.00035987, 0.00031438, 0.00038028, 0.00026817, 0.00029302,
       0.00026455, 0.00029263, 0.00036855, 0.00038581, 0.00029883,
       0.00036578, 0.00036721, 0.0002635 , 0.00031519, 0.00030136,
       0.00029025, 0.00025373, 0.00028219, 0.00026245, 0.00029182]), 'std_score_time': array([5.95524750e-05, 1.82645438e-05, 1.68229609e-05, 2.60477071e-06,
       1.16225084e-05, 1.09284169e-05, 8.14133784e-05, 9.93962910e-05,
       1.05253786e-04, 9.45124448e-06, 4.05433300e-05, 1.10441086e-05,
       1.01235572e-05, 2.50963161e-06, 1.40160927e-05, 1.51042263e-05,
       7.94531480e-06, 2.57706553e-05, 7.29482933e-06, 9.20678588e-06]), 'param_verbose': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.0001, 0.01, 0.01, 0.0001, 0.001, 0.001, 0.01, 0.001,
                   0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001, 0.001,
                   0.01, 0.0001, 0.0001, 0.01],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_shrinking': masked_array(data=[False, True, True, True, False, True, True, False,
                   False, False, False, True, False, True, False, True,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_probability': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[300, 400, 300, 400, 400, 200, 200, 400, 200, 200, 200,
                   300, 300, 400, 200, 200, 300, 400, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['poly', 'sigmoid', 'sigmoid', 'linear', 'rbf',
                   'linear', 'linear', 'poly', 'poly', 'sigmoid', 'rbf',
                   'rbf', 'poly', 'rbf', 'sigmoid', 'sigmoid', 'linear',
                   'linear', 'linear', 'rbf'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_gamma': masked_array(data=['auto', 'auto', 'scale', 'scale', 'scale', 'auto',
                   'scale', 'auto', 'scale', 'auto', 'scale', 'auto',
                   'auto', 'scale', 'auto', 'auto', 'scale', 'auto',
                   'scale', 'scale'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_degree': masked_array(data=[3, 4, 3, 4, 2, 3, 2, 2, 3, 2, 2, 2, 4, 4, 3, 2, 4, 4,
                   4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_decision_function_shape': masked_array(data=['ovr', 'ovo', 'ovr', 'ovo', 'ovr', 'ovr', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovo', 'ovo', 'ovo', 'ovo', 'ovo', 'ovr',
                   'ovo', 'ovr', 'ovr', 'ovo'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_coef0': masked_array(data=[0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0,
                   0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 1.0, 2.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_class_weight': masked_array(data=[None, None, None, None, None, None, None, 'balanced',
                   'balanced', None, None, 'balanced', None, None, None,
                   None, 'balanced', None, None, 'balanced'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_cache_size': masked_array(data=[200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                   200, 200, 200, 200, 200, 200, 200, 200, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_break_ties': masked_array(data=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_C': masked_array(data=[100, 0.1, 1, 10, 10, 1, 100, 0.1, 10, 10, 100, 1, 0.1,
                   0.1, 0.1, 1, 0.1, 1, 100, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'sigmoid', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'poly', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'poly', 'gamma': 'scale', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 10}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'rbf', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'poly', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 3, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'sigmoid', 'gamma': 'auto', 'degree': 2, 'decision_function_shape': 'ovr', 'coef0': 0.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 300, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 2.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 0.1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 400, 'kernel': 'linear', 'gamma': 'auto', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 1.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 1}, {'verbose': False, 'tol': 0.0001, 'shrinking': True, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'linear', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovr', 'coef0': 2.0, 'class_weight': None, 'cache_size': 200, 'break_ties': False, 'C': 100}, {'verbose': False, 'tol': 0.01, 'shrinking': False, 'random_state': 42, 'probability': False, 'max_iter': 200, 'kernel': 'rbf', 'gamma': 'scale', 'degree': 4, 'decision_function_shape': 'ovo', 'coef0': 1.0, 'class_weight': 'balanced', 'cache_size': 200, 'break_ties': False, 'C': 100}], 'split0_test_score': array([0.44827586, 0.4137931 , 0.34482759, 0.82758621, 0.68965517,
       0.4137931 , 0.4137931 , 0.44827586, 0.72413793, 0.4137931 ,
       0.68965517, 0.44827586, 0.62068966, 0.72413793, 0.4137931 ,
       0.4137931 , 0.68965517, 0.82758621, 0.4137931 , 0.72413793]), 'split1_test_score': array([0.44827586, 0.4137931 , 0.27586207, 0.93103448, 0.65517241,
       0.75862069, 0.75862069, 0.89655172, 0.72413793, 0.4137931 ,
       0.68965517, 0.48275862, 0.44827586, 0.5862069 , 0.4137931 ,
       0.4137931 , 0.82758621, 0.93103448, 0.75862069, 0.72413793]), 'split2_test_score': array([0.75      , 0.39285714, 0.39285714, 0.92857143, 0.71428571,
       0.5       , 0.5       , 0.57142857, 0.78571429, 0.39285714,
       0.75      , 0.39285714, 0.46428571, 0.64285714, 0.39285714,
       0.39285714, 0.71428571, 0.92857143, 0.5       , 0.82142857]), 'split3_test_score': array([0.82142857, 0.39285714, 0.17857143, 0.78571429, 0.71428571,
       0.35714286, 0.35714286, 0.25      , 0.71428571, 0.39285714,
       0.71428571, 0.39285714, 0.71428571, 0.64285714, 0.39285714,
       0.39285714, 0.39285714, 0.78571429, 0.35714286, 0.67857143]), 'split4_test_score': array([0.39285714, 0.39285714, 0.21428571, 0.32142857, 0.71428571,
       0.75      , 0.75      , 0.39285714, 0.67857143, 0.39285714,
       0.75      , 0.42857143, 0.82142857, 0.60714286, 0.39285714,
       0.39285714, 0.96428571, 0.32142857, 0.75      , 0.71428571]), 'mean_test_score': array([0.57216749, 0.40123153, 0.28128079, 0.758867  , 0.69753695,
       0.55591133, 0.55591133, 0.51182266, 0.72536946, 0.40123153,
       0.71871921, 0.42906404, 0.6137931 , 0.64064039, 0.40123153,
       0.40123153, 0.71773399, 0.758867  , 0.55591133, 0.73251232]), 'std_test_score': array([0.17697794, 0.01025648, 0.07944104, 0.22593659, 0.02323118,
       0.16828195, 0.16828195, 0.21831693, 0.03451793, 0.01025648,
       0.02707792, 0.0342763 , 0.14353204, 0.04704627, 0.01025648,
       0.01025648, 0.18931484, 0.22593659, 0.16828195, 0.04751461]), 'rank_test_score': array([10, 16, 20,  1,  7, 11, 11, 14,  4, 16,  5, 15,  9,  8, 16, 16,  6,
        1, 11,  3], dtype=int32)}