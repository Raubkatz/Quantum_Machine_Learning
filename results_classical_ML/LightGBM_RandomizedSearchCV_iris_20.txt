LightGBM_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9666666666666668
test-score:
1.0
runtime:
0:00:26.563243
best parameters:
{'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.200805  , 0.25031476, 0.19158716, 0.16865768, 0.14105563,
       0.34373198, 0.73157701, 0.14525704, 0.2533567 , 0.21782551,
       0.06354966, 0.26935873, 0.24126186, 0.19020977, 0.17036338,
       0.27219243, 0.08447261, 0.23645005, 0.42900519, 0.49959354]), 'std_fit_time': array([0.02238823, 0.06266121, 0.04263923, 0.04179191, 0.02316498,
       0.25765435, 0.31511339, 0.03399478, 0.0507269 , 0.10050123,
       0.02335304, 0.11519945, 0.18140826, 0.05066974, 0.02699567,
       0.06603566, 0.01847673, 0.03828415, 0.17155079, 0.06273529]), 'mean_score_time': array([0.00354562, 0.00134439, 0.00498896, 0.00219865, 0.00108538,
       0.00126886, 0.00151405, 0.00210862, 0.00210195, 0.00237923,
       0.00104556, 0.00220127, 0.00311413, 0.00093799, 0.00089798,
       0.00283141, 0.0012249 , 0.00419493, 0.00192356, 0.00394292]), 'std_score_time': array([1.58135694e-03, 6.50132911e-04, 3.96166611e-03, 1.43133072e-03,
       2.56831399e-04, 5.26492510e-04, 7.05417437e-04, 1.40502442e-03,
       8.53441574e-04, 1.80191030e-03, 2.69427367e-04, 9.69337880e-04,
       2.88948217e-03, 8.93483160e-05, 2.81921678e-05, 1.64176168e-03,
       2.57949890e-04, 3.08910208e-03, 7.37265084e-04, 3.15026552e-03]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split1_test_score': array([1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ,
       1.        , 0.95833333, 1.        , 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 0.95833333, 0.95833333, 0.95833333, 0.95833333]), 'split2_test_score': array([0.79166667, 0.83333333, 0.91666667, 0.875     , 0.79166667,
       0.79166667, 0.875     , 0.79166667, 0.875     , 0.91666667,
       0.875     , 0.875     , 0.875     , 0.91666667, 0.875     ,
       0.83333333, 0.83333333, 0.875     , 0.875     , 0.83333333]), 'split3_test_score': array([1.        , 0.91666667, 0.95833333, 0.95833333, 1.        ,
       0.95833333, 0.95833333, 1.        , 0.95833333, 0.95833333,
       1.        , 0.95833333, 0.95833333, 0.95833333, 0.95833333,
       0.95833333, 1.        , 0.95833333, 0.95833333, 0.95833333]), 'split4_test_score': array([0.91666667, 1.        , 1.        , 0.95833333, 0.91666667,
       0.91666667, 0.95833333, 0.91666667, 0.95833333, 1.        ,
       0.95833333, 0.95833333, 0.95833333, 1.        , 1.        ,
       1.        , 0.95833333, 0.95833333, 0.95833333, 1.        ]), 'mean_test_score': array([0.93333333, 0.93333333, 0.96666667, 0.94166667, 0.93333333,
       0.925     , 0.94166667, 0.94166667, 0.94166667, 0.95833333,
       0.95      , 0.94166667, 0.94166667, 0.95833333, 0.95      ,
       0.94166667, 0.94166667, 0.94166667, 0.94166667, 0.94166667]), 'std_test_score': array([0.07728015, 0.05651942, 0.03118048, 0.03333333, 0.07728015,
       0.07168604, 0.03333333, 0.08164966, 0.03333333, 0.02635231,
       0.04082483, 0.03333333, 0.03333333, 0.02635231, 0.04082483,
       0.05651942, 0.05651942, 0.03333333, 0.03333333, 0.05651942]), 'rank_test_score': array([17, 19,  1,  6, 17, 20,  6, 15,  6,  2,  4,  6,  6,  2,  4,  6, 15,
        6,  6,  6], dtype=int32)}