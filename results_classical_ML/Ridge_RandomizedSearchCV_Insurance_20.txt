Ridge_RandomizedSearchCV for the Insurance dataset with n_iter=20
CV-score:
-0.00019259187785429787
test-score:
-0.00020734942909683696
runtime:
0:00:01.699218
best parameters:
{'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.02014103, 0.00318742, 0.04275723, 0.00287232, 0.00202017,
       0.0019496 , 0.00200629, 0.01902246, 0.05341959, 0.00266981,
       0.00365014, 0.00195236, 0.00215626, 0.00202384, 0.00363483,
       0.04347553, 0.00269942, 0.04289827, 0.02348261, 0.02537141]), 'std_fit_time': array([4.97090658e-03, 1.19522541e-04, 8.84254301e-03, 1.01600292e-04,
       1.03979085e-04, 8.58096786e-05, 8.77038226e-05, 2.37308089e-03,
       1.06178982e-02, 2.08107218e-04, 1.03096935e-04, 7.90534172e-05,
       1.71252200e-04, 1.43025046e-04, 7.79491815e-05, 8.82603797e-03,
       1.72362512e-04, 8.80621505e-03, 2.60363510e-03, 3.05566786e-03]), 'mean_score_time': array([0.0107142 , 0.00064573, 0.00087476, 0.00067315, 0.0006597 ,
       0.00066586, 0.00069957, 0.00093398, 0.00080142, 0.00067234,
       0.00070348, 0.00068798, 0.00069413, 0.00067029, 0.00065989,
       0.00075936, 0.00065556, 0.00084138, 0.00072193, 0.00081301]), 'std_score_time': array([2.00675485e-02, 2.56069102e-05, 9.07709349e-05, 3.32549393e-05,
       2.40171663e-05, 1.78565170e-05, 7.04607217e-05, 6.41420601e-05,
       2.16042261e-04, 1.25771168e-05, 1.70742330e-05, 4.14841751e-05,
       2.67405755e-05, 2.18917596e-05, 2.31108169e-05, 1.11560840e-04,
       1.92021560e-05, 1.04400662e-04, 6.25382431e-05, 1.30310793e-04]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 4.80098267e-04,  4.93345087e-04,  4.90228602e-04,  3.91466113e-04,
       -5.53339471e-02, -5.56703179e-02, -5.53178829e-02, -5.53137569e-02,
        4.93512161e-04, -5.53192295e-02,  4.79341060e-04, -6.15977265e-02,
       -5.53178829e-02, -5.53339471e-02,  4.80146179e-04,  4.77882586e-04,
        7.20420934e-05,  3.63376044e-04, -5.56702628e-02, -5.53170838e-02]), 'split1_test_score': array([-0.00102822, -0.00105142, -0.00106132, -0.00092045, -0.04501006,
       -0.04446322, -0.04510691, -0.04490648, -0.00105178, -0.04509692,
       -0.00102941, -0.04671606, -0.04510691, -0.04501006, -0.0010373 ,
       -0.00102936, -0.00051985, -0.00091339, -0.04446194, -0.04509591]), 'split2_test_score': array([ 1.89175144e-05,  1.92234089e-05,  1.82819555e-05, -1.01928433e-05,
       -5.94226136e-02, -5.97113752e-02, -5.94115233e-02, -5.93536379e-02,
        1.90886317e-05, -5.94123812e-02,  2.64025192e-05, -6.52361534e-02,
       -5.94115233e-02, -5.94226136e-02,  1.60369094e-05,  2.63622158e-05,
       -1.71145383e-04,  1.80650859e-05, -5.97112492e-02, -5.94128277e-02]), 'split3_test_score': array([-0.0002086 , -0.00021307, -0.00021257, -0.00024033, -0.04539031,
       -0.04549997, -0.04540253, -0.04550669, -0.00021301, -0.04540104,
       -0.00021713, -0.05031616, -0.04540253, -0.04539031, -0.00021102,
       -0.00021713, -0.000466  , -0.00027249, -0.04549974, -0.0453999 ]), 'split4_test_score': array([-4.28122012e-04, -5.03676167e-04, -5.13882523e-04, -1.83460285e-04,
       -5.22007309e-02, -5.30646561e-02, -5.21143143e-02, -5.22363081e-02,
       -5.04353504e-04, -5.21227556e-02, -4.45622394e-04, -6.04684917e-02,
       -5.21143143e-02, -5.22007309e-02, -4.29055593e-04, -4.45608396e-04,
       -1.21154181e-05, -2.02245724e-04, -5.30638557e-02, -5.21222735e-02]), 'mean_test_score': array([-0.00023319, -0.00025112, -0.00025585, -0.00019259, -0.05147153,
       -0.05168191, -0.05147063, -0.05146337, -0.00025131, -0.05147046,
       -0.00023728, -0.05686692, -0.05147063, -0.05147153, -0.00023624,
       -0.00023757, -0.00021941, -0.00020134, -0.05168141, -0.0514696 ]), 'std_test_score': array([0.0004986 , 0.00051634, 0.00051943, 0.0004258 , 0.00561073,
       0.00587567, 0.00557839, 0.00558845, 0.00051655, 0.00558162,
       0.00050087, 0.00709011, 0.00557839, 0.00561073, 0.00050127,
       0.00050043, 0.0002372 , 0.00041931, 0.00587595, 0.00558192]), 'rank_test_score': array([ 4,  8, 10,  1, 17, 19, 14, 11,  9, 13,  6, 20, 14, 16,  5,  7,  3,
        2, 18, 12], dtype=int32)}