LightGBM_RandomizedSearchCV for the phoneme dataset with n_iter=20
CV-score:
0.8931318240205524
test-score:
0.9093432007400555
runtime:
0:00:39.546888
best parameters:
{'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([1.36218863, 0.36402097, 0.20693197, 0.27322569, 0.40674229,
       0.16846781, 0.33509722, 0.44470611, 0.69452267, 0.97783546,
       0.3019433 , 0.19624248, 0.29571486, 0.23716946, 0.09321141,
       0.27796874, 0.20258565, 0.14984813, 0.43504305, 0.20882974]), 'std_fit_time': array([0.90674403, 0.13499065, 0.02756233, 0.06009646, 0.1400019 ,
       0.02644848, 0.09384408, 0.06242637, 0.19812796, 0.25643844,
       0.11955909, 0.03421304, 0.05326444, 0.07863861, 0.0164964 ,
       0.03523066, 0.03449193, 0.03484676, 0.0655141 , 0.02870159]), 'mean_score_time': array([0.00713444, 0.0073164 , 0.00600119, 0.00598903, 0.00663233,
       0.00384841, 0.00664949, 0.00457234, 0.01121035, 0.01148415,
       0.0040864 , 0.00425148, 0.00484385, 0.00581946, 0.00852561,
       0.00715322, 0.00358424, 0.00628562, 0.00645828, 0.00648952]), 'std_score_time': array([2.39379521e-03, 2.04009440e-03, 4.24096443e-04, 7.79577633e-04,
       2.55153618e-03, 3.46758001e-05, 2.78622684e-03, 4.63620934e-04,
       4.44340366e-03, 7.75813349e-03, 1.04315254e-03, 2.50780625e-04,
       1.08508653e-03, 6.59579500e-04, 6.60338955e-03, 1.25597969e-03,
       6.09310574e-05, 4.14562429e-03, 7.68014020e-04, 1.06894673e-03]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.86473988, 0.87630058, 0.86705202, 0.89248555, 0.86011561,
       0.82543353, 0.87745665, 0.8265896 , 0.8716763 , 0.89479769,
       0.87745665, 0.87630058, 0.87745665, 0.88554913, 0.8716763 ,
       0.87745665, 0.87398844, 0.84624277, 0.88439306, 0.86820809]), 'split1_test_score': array([0.85780347, 0.86936416, 0.86127168, 0.86358382, 0.85086705,
       0.82196532, 0.8566474 , 0.81271676, 0.86358382, 0.87976879,
       0.86473988, 0.84971098, 0.86242775, 0.8716763 , 0.8566474 ,
       0.86473988, 0.85895954, 0.83236994, 0.87861272, 0.86358382]), 'split2_test_score': array([0.85549133, 0.86936416, 0.86242775, 0.86820809, 0.85086705,
       0.82312139, 0.86127168, 0.8300578 , 0.86705202, 0.89595376,
       0.86820809, 0.86936416, 0.88092486, 0.87976879, 0.84855491,
       0.88092486, 0.87283237, 0.84046243, 0.89017341, 0.85780347]), 'split3_test_score': array([0.8599537 , 0.88078704, 0.87847222, 0.88310185, 0.83912037,
       0.80324074, 0.87268519, 0.80902778, 0.88657407, 0.88425926,
       0.87037037, 0.87037037, 0.875     , 0.88194444, 0.87847222,
       0.88773148, 0.86689815, 0.85185185, 0.87962963, 0.87847222]), 'split4_test_score': array([0.87847222, 0.91319444, 0.89467593, 0.90625   , 0.87152778,
       0.82407407, 0.90046296, 0.83564815, 0.91087963, 0.91087963,
       0.90277778, 0.90046296, 0.91319444, 0.91203704, 0.89351852,
       0.90625   , 0.90162037, 0.86574074, 0.91087963, 0.89236111]), 'mean_test_score': array([0.86329212, 0.88180208, 0.87277992, 0.88272586, 0.85449957,
       0.81956701, 0.87370477, 0.82280802, 0.87995317, 0.89313182,
       0.87671055, 0.87324181, 0.88180074, 0.88619514, 0.86977387,
       0.88342057, 0.87485977, 0.84733355, 0.88873769, 0.87208574]), 'std_test_score': array([0.00818113, 0.01628607, 0.012524  , 0.01565862, 0.0108112 ,
       0.00824211, 0.01534049, 0.01023188, 0.01733888, 0.0107983 ,
       0.01368096, 0.01629312, 0.0168924 , 0.01369952, 0.01590998,
       0.01364208, 0.01440281, 0.01123878, 0.01180402, 0.01219164]), 'rank_test_score': array([16,  6, 13,  5, 17, 20, 11, 19,  8,  1,  9, 12,  7,  3, 15,  4, 10,
       18,  2, 14], dtype=int32)}