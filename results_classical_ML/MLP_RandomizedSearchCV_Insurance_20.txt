MLP_RandomizedSearchCV for the Insurance dataset with n_iter=20
CV-score:
0.7580422678338031
test-score:
0.7575371549893843
runtime:
0:02:29.383761
best parameters:
{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.97709074, 0.77463155, 1.40356255, 1.0584815 , 1.33262072,
       1.15474863, 1.20187812, 1.24999962, 2.25929308, 1.57762194,
       4.84117837, 1.13030763, 1.23512268, 0.96515961, 1.87256222,
       1.61148286, 1.49816289, 0.98594131, 1.51387548, 0.87915316]), 'std_fit_time': array([0.12230832, 0.17199589, 0.97427366, 0.45510182, 0.07920169,
       0.17758945, 0.42931556, 0.4458514 , 0.24386463, 0.30317832,
       0.91219759, 0.27357496, 0.37803657, 0.15755993, 0.34061763,
       0.32055935, 0.23505156, 0.16145281, 0.47074056, 0.19836331]), 'mean_score_time': array([0.00277624, 0.00162539, 0.00393395, 0.00200539, 0.01242142,
       0.00382705, 0.00574594, 0.01075482, 0.01581588, 0.00441384,
       0.00676689, 0.00668917, 0.00617566, 0.0028523 , 0.01265287,
       0.01191659, 0.01131768, 0.00208292, 0.00264421, 0.00179925]), 'std_score_time': array([2.36711331e-04, 2.46450950e-04, 5.00883478e-04, 1.29429399e-04,
       3.22031169e-04, 1.38389070e-04, 1.40254945e-03, 2.21619434e-03,
       2.23775476e-03, 8.29523085e-04, 1.65282820e-03, 3.69461314e-04,
       9.98907071e-04, 1.47137513e-03, 3.35517538e-03, 2.10473534e-04,
       2.06452387e-03, 8.42337395e-05, 3.65318344e-04, 2.46411506e-04]), 'param_solver': masked_array(data=['adam', 'adam', 'sgd', 'sgd', 'adam', 'adam', 'sgd',
                   'adam', 'adam', 'adam', 'sgd', 'adam', 'adam', 'adam',
                   'adam', 'adam', 'adam', 'adam', 'sgd', 'sgd'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[200, 200, 400, 300, 200, 200, 300, 400, 300, 200, 400,
                   300, 400, 400, 200, 300, 300, 300, 200, 400],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=['invscaling', 'constant', 'invscaling', 'invscaling',
                   'constant', 'constant', 'constant', 'adaptive',
                   'adaptive', 'constant', 'adaptive', 'constant',
                   'invscaling', 'adaptive', 'invscaling', 'adaptive',
                   'invscaling', 'invscaling', 'invscaling', 'constant'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100,), (50,), (100,), (50,), (100,), (100,), (50,),
                   (100,), (150,), (150,), (50,), (50,), (50,), (50,),
                   (100,), (100,), (100,), (50,), (100,), (50,)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.01, 0.01, 0.0001, 0.0001, 0.01, 0.001, 0.0001,
                   0.001, 0.01, 0.0001, 0.0001, 0.001, 0.01, 0.0001, 0.01,
                   0.01, 0.01, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'tanh', 'relu', 'tanh',
                   'tanh', 'tanh', 'relu', 'tanh', 'tanh', 'tanh', 'relu',
                   'tanh', 'tanh', 'tanh', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (150,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'constant', 'hidden_layer_sizes': (150,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 400, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'adam', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'adaptive', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.01, 'activation': 'tanh'}, {'solver': 'adam', 'max_iter': 300, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (50,), 'alpha': 0.01, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 200, 'learning_rate': 'invscaling', 'hidden_layer_sizes': (100,), 'alpha': 0.0001, 'activation': 'relu'}, {'solver': 'sgd', 'max_iter': 400, 'learning_rate': 'constant', 'hidden_layer_sizes': (50,), 'alpha': 0.0001, 'activation': 'relu'}], 'split0_test_score': array([0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178]), 'split1_test_score': array([0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178]), 'split2_test_score': array([0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178,
       0.75796178, 0.75796178, 0.75796178, 0.75796178, 0.75796178]), 'split3_test_score': array([0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299]), 'split4_test_score': array([0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299,
       0.75816299, 0.75816299, 0.75816299, 0.75816299, 0.75816299]), 'mean_test_score': array([0.75804227, 0.75804227, 0.75804227, 0.75804227, 0.75804227,
       0.75804227, 0.75804227, 0.75804227, 0.75804227, 0.75804227,
       0.75804227, 0.75804227, 0.75804227, 0.75804227, 0.75804227,
       0.75804227, 0.75804227, 0.75804227, 0.75804227, 0.75804227]), 'std_test_score': array([9.85728492e-05, 9.85728492e-05, 9.85728492e-05, 9.85728492e-05,
       9.85728492e-05, 9.85728492e-05, 9.85728492e-05, 9.85728492e-05,
       9.85728492e-05, 9.85728492e-05, 9.85728492e-05, 9.85728492e-05,
       9.85728492e-05, 9.85728492e-05, 9.85728492e-05, 9.85728492e-05,
       9.85728492e-05, 9.85728492e-05, 9.85728492e-05, 9.85728492e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      dtype=int32)}