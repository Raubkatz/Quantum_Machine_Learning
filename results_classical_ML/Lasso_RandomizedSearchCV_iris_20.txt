Lasso_RandomizedSearchCV for the iris dataset with n_iter=20
CV-score:
0.9124242061887313
test-score:
0.9453983169131964
runtime:
0:00:00.254166
best parameters:
{'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00090852, 0.00072427, 0.00071497, 0.01519737, 0.00095897,
       0.000666  , 0.00054688, 0.00060325, 0.00089831, 0.00062308,
       0.00060081, 0.00075779, 0.00061693, 0.00109792, 0.0007534 ,
       0.00087914, 0.00095439, 0.00113373, 0.00141139, 0.00091109]), 'std_fit_time': array([4.22441570e-04, 2.96159256e-05, 6.36965923e-06, 2.79742130e-02,
       4.73173852e-05, 1.79759387e-05, 1.23641586e-05, 2.28734764e-05,
       3.52645352e-04, 1.55733877e-05, 3.38265470e-05, 2.07727287e-04,
       9.20805271e-05, 1.26816902e-04, 2.19790742e-04, 2.09560660e-04,
       2.35096532e-04, 1.57641124e-04, 3.79618684e-05, 2.43994345e-04]), 'mean_score_time': array([0.00034003, 0.00032015, 0.00031686, 0.00055504, 0.00045452,
       0.00031452, 0.0003067 , 0.00030918, 0.00032463, 0.00031238,
       0.00033197, 0.0004066 , 0.000351  , 0.00049114, 0.0003994 ,
       0.00040231, 0.00042663, 0.00059285, 0.00063205, 0.00045133]), 'std_score_time': array([5.03178217e-05, 8.69806397e-06, 1.01679305e-05, 5.34800030e-05,
       6.04069312e-05, 1.52568518e-05, 6.25475136e-06, 2.40034350e-06,
       2.37346145e-05, 4.69968923e-06, 2.23262673e-05, 1.00898630e-04,
       8.79816116e-05, 7.54935781e-05, 1.11282740e-04, 1.08687559e-04,
       1.10280549e-04, 1.25369186e-05, 8.16809665e-05, 1.16325302e-04]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.91996933, -0.06131114, -0.06131114, -0.06131114,  0.74784435,
       -0.06131114, -1.08695652, -1.08695652,  0.91667395, -0.06131114,
        0.65372991, -1.08695652, -1.08695652,  0.90158393,  0.78430354,
       -0.06131114,  0.91731136,  0.85644243,  0.90949363,  0.90664517]), 'split1_test_score': array([ 0.94125442, -0.01332237, -0.01332237, -0.01332237,  0.69950749,
       -0.01332237, -1.27368421, -1.27368421,  0.94708905, -0.01332237,
        0.62471609, -1.27368421, -1.27368421,  0.8751415 ,  0.7665211 ,
       -0.01332237,  0.94493445,  0.89076127,  0.93949791,  0.89293243]), 'split2_test_score': array([ 0.89606035, -0.03070175, -0.03070175, -0.03070175,  0.72215795,
       -0.03070175, -1.10526316, -1.10526316,  0.88893917, -0.03070175,
        0.6482236 , -1.10526316, -1.10526316,  0.89042943,  0.79423204,
       -0.03070175,  0.89787012,  0.8340899 ,  0.88365373,  0.90120955]), 'split3_test_score': array([ 0.89104961, -0.00723473, -0.00723473, -0.00723473,  0.66632974,
       -0.00723473, -2.0096463 , -2.0096463 ,  0.89893962, -0.00723473,
        0.62882192, -2.0096463 , -2.0096463 ,  0.82147673,  0.74155698,
       -0.00723473,  0.89840607,  0.87573027,  0.90248137,  0.8504623 ]), 'split4_test_score': array([ 0.91058867, -0.22562674, -0.22562674, -0.22562674,  0.50871249,
       -0.22562674, -2.67688022, -2.67688022,  0.89614075, -0.22562674,
        0.45107914, -2.67688022, -2.67688022,  0.85254385,  0.76500451,
       -0.22562674,  0.90359903,  0.86023691,  0.90786923,  0.87402522]), 'mean_test_score': array([ 0.91178448, -0.06763935, -0.06763935, -0.06763935,  0.66891041,
       -0.06763935, -1.63048608, -1.63048608,  0.90955651, -0.06763935,
        0.60131413, -1.63048608, -1.63048608,  0.86823509,  0.77032363,
       -0.06763935,  0.91242421,  0.86345216,  0.90859917,  0.88505494]), 'std_test_score': array([0.01796709, 0.08119544, 0.08119544, 0.08119544, 0.08446547,
       0.08119544, 0.62246193, 0.62246193, 0.02086684, 0.08119544,
       0.07592469, 0.62246193, 0.62246193, 0.02858318, 0.01809598,
       0.08119544, 0.01770318, 0.01906912, 0.01797647, 0.02053032]), 'rank_test_score': array([ 2, 11, 11, 11,  9, 11, 17, 17,  3, 11, 10, 17, 17,  6,  8, 11,  1,
        7,  4,  5], dtype=int32)}