Lasso_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.08504584618994962
test-score:
0.11480660190324643
runtime:
0:00:00.382203
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00122128, 0.00124063, 0.00120392, 0.01073861, 0.00184994,
       0.0020319 , 0.0017983 , 0.00187435, 0.00186338, 0.001932  ,
       0.00185924, 0.00211415, 0.00211015, 0.00221205, 0.00216413,
       0.00222874, 0.00232782, 0.00193381, 0.00260592, 0.00192661]), 'std_fit_time': array([7.79077498e-05, 3.11931693e-05, 1.25767552e-05, 1.71881768e-02,
       1.60336450e-05, 4.95069965e-05, 2.75917774e-05, 2.46011007e-05,
       1.28344510e-05, 4.05857056e-05, 4.09867542e-05, 6.18854174e-05,
       3.47504710e-05, 1.25233815e-04, 1.17746727e-04, 5.06765967e-05,
       1.49455523e-04, 4.97535647e-05, 8.87382818e-04, 8.89698661e-05]), 'mean_score_time': array([0.00045962, 0.00044665, 0.00044322, 0.00076723, 0.00071373,
       0.00071349, 0.0007268 , 0.00072274, 0.00071726, 0.00071726,
       0.00072646, 0.00079708, 0.00079479, 0.00080743, 0.0007966 ,
       0.0008162 , 0.00078168, 0.00074244, 0.00085998, 0.00074015]), 'std_score_time': array([2.48739945e-05, 4.12567490e-06, 1.81574180e-06, 8.32025504e-05,
       1.25798282e-06, 1.39710846e-05, 1.86037392e-05, 1.68901349e-05,
       8.69832537e-06, 3.94825774e-06, 1.89004439e-05, 4.45523632e-05,
       1.56694524e-05, 2.69700210e-05, 2.76283416e-05, 6.63113350e-05,
       3.36241545e-05, 1.34886773e-05, 2.47072427e-04, 1.56912032e-05]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 7.76575310e-02, -2.37324078e-03, -2.37324078e-03, -2.37324078e-03,
       -8.14479638e+00, -2.37324078e-03, -8.14479638e+00, -8.14479638e+00,
       -5.36022475e-01, -2.37324078e-03, -8.14479638e+00, -8.14479638e+00,
       -8.14479638e+00, -8.21321554e-01, -8.22888667e-01, -2.37324078e-03,
        7.32559317e-02, -6.03286371e-01, -3.35899318e-02, -2.37324078e-03]), 'split1_test_score': array([ 8.32997055e-02, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -2.17265582e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -4.96391807e-01, -4.99150582e-01, -1.61173716e-03,
        8.26345339e-02, -2.64227106e-01,  7.26303244e-03, -1.61173716e-03]), 'split2_test_score': array([ 0.10042876, -0.02524279, -0.02524279, -0.02524279, -8.01818182,
       -0.02524279, -8.01818182, -8.01818182, -0.14538021, -0.02524279,
       -8.01818182, -8.01818182, -8.01818182, -0.67250895, -0.67152017,
       -0.02524279,  0.08412372, -0.16617155,  0.0096016 , -0.02524279]), 'split3_test_score': array([ 2.74420520e-02, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -2.42834134e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -4.37090189e-01, -4.39387707e-01, -1.61173716e-03,
        2.75591618e-02, -2.16157199e-01,  1.19781120e-02, -1.61173716e-03]), 'split4_test_score': array([ 1.36401184e-01, -1.61173716e-03, -1.61173716e-03, -1.61173716e-03,
       -8.12916188e+00, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -3.38560306e-01, -1.61173716e-03, -8.12916188e+00, -8.12916188e+00,
       -8.12916188e+00, -5.25402536e-01, -5.28279115e-01, -1.61173716e-03,
        9.70584263e-02, -3.42655590e-01,  4.19222464e-02, -1.61173716e-03]), 'mean_test_score': array([ 8.50458462e-02, -6.49024905e-03, -6.49024905e-03, -6.49024905e-03,
       -8.11009277e+00, -6.49024905e-03, -8.11009277e+00, -8.11009277e+00,
       -2.96012541e-01, -6.49024905e-03, -8.11009277e+00, -8.11009277e+00,
       -8.11009277e+00, -5.90543007e-01, -5.92245248e-01, -6.49024905e-03,
        7.29263547e-02, -3.18499562e-01,  7.43501096e-03, -6.49024905e-03]), 'std_test_score': array([0.03535488, 0.00938091, 0.00938091, 0.00938091, 0.04635268,
       0.00938091, 0.04635268, 0.04635268, 0.13500682, 0.00938091,
       0.04635268, 0.04635268, 0.04635268, 0.13901989, 0.13827842,
       0.00938091, 0.02391768, 0.15382479, 0.02407396, 0.00938091]), 'rank_test_score': array([ 1,  4,  4,  4, 15,  4, 15, 15, 11,  4, 15, 15, 15, 13, 14,  4,  2,
       12,  3,  4], dtype=int32)}