LightGBM_RandomizedSearchCV for the ilpd dataset with n_iter=20
CV-score:
0.6996110729810112
test-score:
0.7521367521367521
runtime:
0:00:30.317734
best parameters:
{'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.24796257, 0.26598587, 0.14622178, 0.30372686, 0.25400243,
       0.63408232, 0.45881424, 0.22580028, 0.42887363, 0.34408469,
       0.1407064 , 0.1635262 , 0.19122143, 0.27186894, 0.12313352,
       0.28795037, 0.10920968, 0.19374442, 0.45369697, 0.51537833]), 'std_fit_time': array([0.06421206, 0.07259747, 0.06850211, 0.06278897, 0.0821728 ,
       0.11892412, 0.29149265, 0.04486046, 0.07971687, 0.11503795,
       0.02700823, 0.07117115, 0.03221338, 0.16888206, 0.05410429,
       0.13186132, 0.02057693, 0.08242384, 0.2869388 , 0.57775651]), 'mean_score_time': array([0.004105  , 0.00195665, 0.00160122, 0.00477161, 0.00179214,
       0.01191053, 0.00737128, 0.00269828, 0.00262575, 0.00216093,
       0.00325394, 0.00168195, 0.00191808, 0.00193195, 0.00204439,
       0.00223684, 0.00269485, 0.00270205, 0.00188675, 0.00928369]), 'std_score_time': array([4.97613647e-03, 3.56755955e-04, 6.87826651e-05, 4.60457834e-03,
       4.14192827e-04, 5.34060939e-03, 6.68676140e-03, 4.39180370e-04,
       4.99421343e-04, 8.27151698e-04, 2.15717973e-03, 2.19199070e-04,
       2.54445151e-04, 3.08094573e-04, 3.82399451e-04, 9.49494512e-04,
       2.25330190e-03, 2.29130849e-03, 3.68172099e-04, 1.03540898e-02]), 'param_subsample': masked_array(data=[0.5, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 1, 0.8, 1, 1, 0.5,
                   1, 1, 0.5, 1, 0.8, 0.8, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[150, 200, 200, 150, 150, 100, 150, 100, 200, 150, 50,
                   100, 100, 150, 150, 200, 50, 150, 150, 200],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_depth': masked_array(data=[10, 5, 3, 5, 5, 5, 5, 7, 7, 10, 10, 5, 10, 5, 3, 5, 7,
                   3, 10, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.01, 0.1, 0.2, 0.1, 0.01, 0.01, 0.05, 0.01, 0.05, 0.2,
                   0.05, 0.05, 0.05, 0.2, 0.2, 0.2, 0.05, 0.05, 0.1, 0.2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_colsample_bytree': masked_array(data=[0.8, 0.5, 0.8, 1, 1, 1, 0.8, 0.5, 0.5, 0.8, 1, 1, 0.8,
                   0.8, 1, 0.5, 0.8, 0.5, 1, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'subsample': 0.5, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.01, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.01, 'colsample_bytree': 1}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 7, 'learning_rate': 0.01, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 200, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 50, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.05, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 100, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.8}, {'subsample': 0.5, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 1}, {'subsample': 1, 'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.2, 'colsample_bytree': 0.5}, {'subsample': 0.8, 'n_estimators': 50, 'max_depth': 7, 'learning_rate': 0.05, 'colsample_bytree': 0.8}, {'subsample': 0.8, 'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.05, 'colsample_bytree': 0.5}, {'subsample': 1, 'n_estimators': 150, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 1}, {'subsample': 0.5, 'n_estimators': 200, 'max_depth': 3, 'learning_rate': 0.2, 'colsample_bytree': 0.5}], 'split0_test_score': array([0.67021277, 0.64893617, 0.61702128, 0.64893617, 0.69148936,
       0.68085106, 0.65957447, 0.68085106, 0.64893617, 0.63829787,
       0.63829787, 0.63829787, 0.65957447, 0.64893617, 0.61702128,
       0.65957447, 0.63829787, 0.62765957, 0.61702128, 0.68085106]), 'split1_test_score': array([0.64516129, 0.67741935, 0.6344086 , 0.65591398, 0.62365591,
       0.66666667, 0.67741935, 0.67741935, 0.66666667, 0.6344086 ,
       0.62365591, 0.62365591, 0.64516129, 0.66666667, 0.6344086 ,
       0.64516129, 0.65591398, 0.6344086 , 0.64516129, 0.65591398]), 'split2_test_score': array([0.70967742, 0.68817204, 0.69892473, 0.72043011, 0.70967742,
       0.70967742, 0.7311828 , 0.72043011, 0.7311828 , 0.68817204,
       0.70967742, 0.69892473, 0.69892473, 0.67741935, 0.70967742,
       0.72043011, 0.70967742, 0.69892473, 0.69892473, 0.68817204]), 'split3_test_score': array([0.68817204, 0.62365591, 0.6344086 , 0.62365591, 0.68817204,
       0.70967742, 0.62365591, 0.70967742, 0.6344086 , 0.65591398,
       0.6344086 , 0.6344086 , 0.62365591, 0.61290323, 0.61290323,
       0.67741935, 0.6344086 , 0.62365591, 0.6344086 , 0.6344086 ]), 'split4_test_score': array([0.74193548, 0.76344086, 0.76344086, 0.72043011, 0.72043011,
       0.72043011, 0.78494624, 0.70967742, 0.75268817, 0.74193548,
       0.74193548, 0.78494624, 0.76344086, 0.76344086, 0.7311828 ,
       0.69892473, 0.7311828 , 0.70967742, 0.74193548, 0.75268817]), 'mean_test_score': array([0.6910318 , 0.68032487, 0.66964081, 0.67387326, 0.68668497,
       0.69746054, 0.69535575, 0.69961107, 0.68677648, 0.6717456 ,
       0.66959506, 0.67604667, 0.67815145, 0.67387326, 0.66103866,
       0.68030199, 0.67389613, 0.65886525, 0.66749028, 0.68240677]), 'std_test_score': array([0.03311966, 0.04727559, 0.05460298, 0.03950002, 0.03366108,
       0.02024966, 0.056662  , 0.01720759, 0.04667967, 0.0398996 ,
       0.04726042, 0.06047481, 0.04921185, 0.04985192, 0.04949674,
       0.02694394, 0.0392732 , 0.03741192, 0.04619592, 0.03995204]), 'rank_test_score': array([ 4,  8, 16, 13,  6,  2,  3,  1,  5, 15, 17, 11, 10, 13, 19,  9, 12,
       20, 18,  7], dtype=int32)}