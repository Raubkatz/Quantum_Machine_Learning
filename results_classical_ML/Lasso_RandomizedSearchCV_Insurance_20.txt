Lasso_RandomizedSearchCV for the Insurance dataset with n_iter=20
CV-score:
-0.0002579998115419535
test-score:
-1.3890108818692681e-06
runtime:
0:00:00.407453
best parameters:
{'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00931425, 0.00238185, 0.00238514, 0.00240622, 0.00206757,
       0.00240216, 0.00196362, 0.00205173, 0.00212369, 0.00221972,
       0.00238185, 0.00238247, 0.00229726, 0.00295062, 0.00235791,
       0.0025238 , 0.00250444, 0.00208583, 0.002391  , 0.0020668 ]), 'std_fit_time': array([1.41155858e-02, 1.09634019e-04, 1.00712139e-04, 8.28092768e-05,
       4.54481097e-05, 3.89239342e-05, 4.05305975e-05, 2.84190946e-05,
       2.80599930e-05, 9.24045208e-05, 2.74326038e-05, 2.83673628e-05,
       8.85576085e-05, 5.80150536e-04, 9.60423193e-05, 5.91634827e-05,
       6.13171797e-05, 4.58549282e-05, 4.72991696e-05, 4.54747175e-05]), 'mean_score_time': array([0.00070682, 0.00061803, 0.00061579, 0.00061369, 0.00060625,
       0.00061641, 0.00060844, 0.00061221, 0.00061612, 0.00061994,
       0.00068297, 0.00071149, 0.00068746, 0.00075936, 0.00072141,
       0.00066104, 0.000629  , 0.00061388, 0.00060945, 0.00060544]), 'std_score_time': array([1.30124186e-04, 9.77853391e-06, 1.06072423e-05, 1.15153952e-05,
       6.88100968e-06, 8.29559622e-06, 5.68816965e-06, 9.55508376e-06,
       1.09261281e-05, 1.81288446e-05, 2.62332386e-05, 1.44075856e-05,
       1.76941927e-05, 2.55292754e-05, 1.61516226e-05, 8.42478288e-06,
       9.65097676e-06, 8.40424646e-06, 7.30884200e-06, 1.15740863e-05]), 'param_warm_start': masked_array(data=[True, True, True, False, True, True, True, False, True,
                   True, True, True, False, True, False, False, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_tol': masked_array(data=[0.001, 0.001, 0.0001, 0.0001, 0.01, 0.001, 0.01,
                   0.0001, 0.01, 0.0001, 0.01, 0.01, 0.001, 0.0001, 0.001,
                   0.001, 0.01, 0.01, 0.0001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_selection': masked_array(data=['random', 'cyclic', 'random', 'random', 'cyclic',
                   'random', 'random', 'cyclic', 'random', 'random',
                   'random', 'random', 'cyclic', 'cyclic', 'cyclic',
                   'cyclic', 'random', 'cyclic', 'cyclic', 'cyclic'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_precompute': masked_array(data=[False, False, False, True, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_positive': masked_array(data=[False, True, False, True, False, True, True, False,
                   False, True, True, True, False, False, True, False,
                   False, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[False, True, True, True, True, True, False, True,
                   False, False, True, True, False, False, True, True,
                   True, False, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 1000, 100, 100, 100, 1000, 1000, 1000, 500, 500,
                   500, 500, 500, 1000, 100, 100, 500, 1000, 1000, 100],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, True, False, False,
                   False, True, False, False, False, False, False, True,
                   True, False, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, False, False, True, False, False, True,
                   True, False, False, False, True, False, False, False,
                   True, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.001, 10, 10, 10, 1, 0.1, 10, 100, 0.001, 10, 1, 10,
                   100, 0.1, 0.1, 0.1, 0.001, 0.01, 0.001, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'warm_start': True, 'tol': 0.001, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': False, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'warm_start': True, 'tol': 0.0001, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 100}, {'warm_start': True, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'warm_start': True, 'tol': 0.01, 'selection': 'random', 'random_state': 42, 'precompute': True, 'positive': False, 'normalize': True, 'max_iter': 500, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.01, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': False, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.01}, {'warm_start': False, 'tol': 0.0001, 'selection': 'cyclic', 'random_state': 42, 'precompute': True, 'positive': True, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'warm_start': False, 'tol': 0.001, 'selection': 'cyclic', 'random_state': 42, 'precompute': False, 'positive': False, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([-1.98336476e-04, -1.98336476e-04, -1.98336476e-04, -1.98336476e-04,
       -3.27695560e-01, -1.98336476e-04, -3.27695560e-01, -3.27695560e-01,
       -5.92912274e-02, -1.98336476e-04, -3.27695560e-01, -3.27695560e-01,
       -3.27695560e-01, -2.44769639e-01, -2.44745168e-01, -1.98336476e-04,
       -1.98336476e-04, -7.25974440e-02, -1.98336476e-04, -1.98336476e-04]), 'split1_test_score': array([-5.72362550e-04, -5.51565194e-08, -5.51565194e-08, -5.51565194e-08,
       -3.19327731e-01, -5.51565194e-08, -3.19327731e-01, -3.19327731e-01,
       -4.58464475e-02, -5.51565194e-08, -3.19327731e-01, -3.19327731e-01,
       -3.19327731e-01, -2.35592298e-01, -2.35592298e-01, -5.51565194e-08,
       -5.51565194e-08, -5.41498583e-02, -5.51565194e-08, -5.51565194e-08]), 'split2_test_score': array([-0.00034818, -0.00034818, -0.00034818, -0.00034818, -0.33050847,
       -0.00034818, -0.33050847, -0.33050847, -0.06332541, -0.00034818,
       -0.33050847, -0.33050847, -0.33050847, -0.24811793, -0.24811793,
       -0.00034818, -0.00034818, -0.07487664, -0.00034818, -0.00034818]), 'split3_test_score': array([-0.0006486 , -0.00068938, -0.00068938, -0.00068938, -0.30391139,
       -0.00068938, -0.30391139, -0.30391139, -0.04847971, -0.00068938,
       -0.30391139, -0.30391139, -0.30391139, -0.21742434, -0.21740542,
       -0.00068938, -0.00068938, -0.05753506, -0.00068938, -0.00068938]), 'split4_test_score': array([-2.32179105e-05, -5.40457196e-05, -5.40457196e-05, -5.40457196e-05,
       -3.14834206e-01, -5.40457196e-05, -3.14834206e-01, -3.14834206e-01,
       -5.90544341e-02, -5.40457196e-05, -3.14834206e-01, -3.14834206e-01,
       -3.14834206e-01, -2.30181486e-01, -2.30181486e-01, -5.40457196e-05,
       -5.40457196e-05, -6.80743548e-02, -5.40457196e-05, -5.40457196e-05]), 'mean_test_score': array([-3.58139294e-04, -2.57999812e-04, -2.57999812e-04, -2.57999812e-04,
       -3.19255472e-01, -2.57999812e-04, -3.19255472e-01, -3.19255472e-01,
       -5.51994452e-02, -2.57999812e-04, -3.19255472e-01, -3.19255472e-01,
       -3.19255472e-01, -2.35217138e-01, -2.35208459e-01, -2.57999812e-04,
       -2.57999812e-04, -6.54466709e-02, -2.57999812e-04, -2.57999812e-04]), 'std_test_score': array([0.00023155, 0.00024735, 0.00024735, 0.00024735, 0.00951692,
       0.00024735, 0.00951692, 0.00951692, 0.00678629, 0.00024735,
       0.00951692, 0.00951692, 0.00951692, 0.01095229, 0.01095417,
       0.00024735, 0.00024735, 0.00821187, 0.00024735, 0.00024735]), 'rank_test_score': array([10,  1,  1,  1, 15,  1, 15, 15, 11,  1, 15, 15, 15, 14, 13,  1,  1,
       12,  1,  1], dtype=int32)}