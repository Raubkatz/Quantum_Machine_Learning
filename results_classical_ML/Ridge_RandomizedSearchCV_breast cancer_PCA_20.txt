Ridge_RandomizedSearchCV for the breast cancer_PCA dataset with n_iter=20
CV-score:
0.718961439018798
test-score:
0.748491766263917
runtime:
0:00:01.901593
best parameters:
{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}
RandomizedSearchCV.cv_results:
{'mean_fit_time': array([0.00245576, 0.00124536, 0.01139245, 0.00106134, 0.00115004,
       0.00064631, 0.00080261, 0.01456509, 0.04683995, 0.00152602,
       0.00105042, 0.00045061, 0.00056286, 0.00060678, 0.00097718,
       0.122861  , 0.00118012, 0.06922393, 0.0123673 , 0.06688724]), 'std_fit_time': array([1.01973207e-04, 6.73139044e-05, 2.43561102e-04, 8.62985153e-05,
       1.02256806e-03, 2.24844774e-05, 3.42515818e-05, 1.08744023e-03,
       8.83210034e-03, 1.35943138e-04, 1.67609747e-04, 5.26396692e-05,
       4.48121403e-05, 9.13290679e-05, 7.39366113e-05, 4.13450025e-03,
       6.58566150e-05, 8.12654989e-03, 6.54079809e-05, 5.24176440e-03]), 'mean_score_time': array([0.0005723 , 0.00047398, 0.0006238 , 0.00046253, 0.00047665,
       0.0004705 , 0.00047388, 0.00072942, 0.00065947, 0.00049448,
       0.00041618, 0.00031762, 0.00032277, 0.00036955, 0.00032282,
       0.00059228, 0.00054688, 0.00061059, 0.00040598, 0.0006382 ]), 'std_score_time': array([4.86167228e-05, 6.20804623e-06, 4.98290495e-05, 8.99188962e-06,
       3.47625081e-05, 1.26326754e-05, 8.33933525e-06, 3.52745424e-05,
       1.10608749e-04, 1.09437400e-04, 8.67359582e-05, 1.68563116e-05,
       1.03873916e-05, 7.28965342e-05, 7.47889859e-06, 7.52819113e-05,
       5.13902163e-05, 4.96077968e-05, 4.95826732e-05, 1.08190495e-04]), 'param_tol': masked_array(data=[0.01, 0.001, 0.01, 0.0001, 0.0001, 0.0001, 0.001, 0.01,
                   0.0001, 0.0001, 0.01, 0.0001, 0.001, 0.01, 0.001,
                   0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'sparse_cg', 'sag', 'svd', 'auto', 'cholesky',
                   'svd', 'saga', 'sag', 'sparse_cg', 'sparse_cg', 'auto',
                   'svd', 'svd', 'sparse_cg', 'saga', 'svd', 'saga',
                   'saga', 'saga'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                   42, 42, 42, 42, 42, 42],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_normalize': masked_array(data=[True, False, False, True, True, False, True, True,
                   False, True, False, False, True, True, True, False,
                   True, False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[1000, 100, 1000, 1000, 100, 100, 1000, 1000, 500, 1000,
                   1000, 100, 100, 500, 100, 1000, 100, 500, 100, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_fit_intercept': masked_array(data=[True, True, True, True, False, False, False, False,
                   True, False, True, False, False, False, True, True,
                   True, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_copy_X': masked_array(data=[False, False, True, True, True, True, False, True,
                   False, False, True, False, True, True, False, False,
                   True, False, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.01, 0.1, 0.1, 0.1, 1, 10, 0.001, 0.1, 0.001, 0.1, 10,
                   100, 0.001, 1, 0.01, 10, 1, 100, 10, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'cholesky', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 10}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'saga', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}, {'tol': 0.0001, 'solver': 'sag', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.001}, {'tol': 0.0001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 1000, 'fit_intercept': False, 'copy_X': False, 'alpha': 0.1}, {'tol': 0.01, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': True, 'alpha': 10}, {'tol': 0.0001, 'solver': 'auto', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 100}, {'tol': 0.001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.001}, {'tol': 0.01, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 1}, {'tol': 0.001, 'solver': 'sparse_cg', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': False, 'alpha': 0.01}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 1000, 'fit_intercept': True, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'svd', 'random_state': 42, 'normalize': True, 'max_iter': 100, 'fit_intercept': True, 'copy_X': True, 'alpha': 1}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': True, 'copy_X': False, 'alpha': 100}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 100, 'fit_intercept': False, 'copy_X': False, 'alpha': 10}, {'tol': 0.0001, 'solver': 'saga', 'random_state': 42, 'normalize': False, 'max_iter': 500, 'fit_intercept': False, 'copy_X': True, 'alpha': 0.1}], 'split0_test_score': array([ 0.73778705,  0.64121059,  0.6344781 ,  0.74002811, -1.30512146,
       -1.3039094 , -1.31253399, -1.3005531 ,  0.66819381, -1.30302598,
        0.63288829, -1.343546  , -1.31253399, -1.30512146,  0.73678782,
        0.66818675,  0.54476911,  0.65584062, -1.30025745, -1.2780745 ]), 'split1_test_score': array([ 0.73765264,  0.65695174,  0.49914541,  0.73858828, -1.23079148,
       -1.26859031, -1.22360597, -1.48960079,  0.59112595, -1.30912592,
        0.4822883 , -1.29990049, -1.22360597, -1.23079148,  0.73754421,
        0.59106642,  0.55630391,  0.54464038, -1.48903996, -1.42292012]), 'split2_test_score': array([ 0.69930042,  0.669467  ,  0.60243463,  0.70431671, -1.11146063,
       -1.05805012, -1.1672427 , -1.26103346,  0.65715983, -1.05585701,
        0.57095443, -1.06968336, -1.1672427 , -1.11146063,  0.69179814,
        0.65712722,  0.54927033,  0.6294099 , -1.26317741, -1.21887331]), 'split3_test_score': array([ 0.72556159,  0.65781809,  0.49123355,  0.70544208, -0.73115853,
       -0.68249426, -0.86625216, -0.64431907,  0.58290078, -0.7103675 ,
        0.48156401, -0.67145886, -0.86625216, -0.73115853,  0.72623313,
        0.58287659,  0.46393834,  0.53614517, -0.64407438, -0.62297087]), 'split4_test_score': array([ 0.69450549,  0.60135705,  0.42908311,  0.70057436, -2.77847514,
       -2.34561362, -4.04378973, -1.56009111,  0.56007989, -2.86194356,
        0.37242198, -1.85990309, -4.04378973, -2.77847514,  0.64217581,
        0.55988341,  0.51084484,  0.50379138, -1.56681011, -1.60964585]), 'mean_test_score': array([ 0.71896144,  0.64536089,  0.53127496,  0.71778991, -1.43140145,
       -1.33173154, -1.72268491, -1.25111951,  0.61189205, -1.44806399,
        0.5080234 , -1.24889836, -1.72268491, -1.43140145,  0.70690782,
        0.61182808,  0.52502531,  0.57396549, -1.25267186, -1.23049693]), 'std_test_score': array([0.0186117 , 0.02376635, 0.07588594, 0.01764925, 0.70192604,
       0.55301507, 1.17019864, 0.32344567, 0.04283756, 0.73992131,
       0.08865855, 0.38741207, 1.17019864, 0.70192604, 0.03639617,
       0.04288542, 0.03431819, 0.05829642, 0.32475171, 0.33234537]), 'rank_test_score': array([ 1,  4,  8,  2, 17, 15, 19, 13,  5, 18, 10, 12, 19, 16,  3,  6,  9,
        7, 14, 11], dtype=int32)}